#*****************************************************************************************
# Vivado (TM) v2018.3 (64-bit)
#
# create_andromeda_project_with_bd_as_tcl_wrapper_out_of_prj.tcl: Tcl script for re-creating project 'andromeda_project'
#
# Generated by Vivado on Sat Jan 26 16:48:43 +0000 2019
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (create_andromeda_project_with_bd_as_tcl_wrapper_out_of_prj.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/register.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/double_register.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/usr_reg_access.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/axi_cfg_register.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/pwm_dac.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/Attenuator.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/clockdivider.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/RF_SPI.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/debounce.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/ltc2208_derand.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_mux_2.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/reg_to_axis.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_4_1.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/overrange_latch.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_8_1.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_constant.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_mux_4.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/cw_key_ramp.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/cvt_offsetbinary.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/I2S_rcv.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/I2S_xmit.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_adder.v"
#    "C:/xilinxdesigns/andromeda/sources/verilogmodules/i2s_clk_lrclk_gen.v"
#    "C:/xilinxdesigns/andromeda/sources/wrapper/andromeda_top_wrapper.v"
#    "C:/xilinxdesigns/andromeda/sources/coefficientfiles/512 tap TX filter_tfilter.coe"
#    "C:/xilinxdesigns/andromeda/sources/coefficientfiles/cwkeyershape_960points.coe"
#    "C:/xilinxdesigns/andromeda/sources/coefficientfiles/512TapLPF_corner_20KHz_tfilter.coe"
#    "C:/xilinxdesigns/andromeda/sources/coefficientfiles/cwkeyershape_240points.coe"
#    "C:/xilinxdesigns/andromeda/constraints/pinconstraints.xdc"
#    "C:/xilinxdesigns/andromeda/constraints/timingconstraints.xdc"
#    "C:/xilinxdesigns/andromeda/constraints/xdma_pcie2_ip-PCIE_X0Y0.xdc"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "andromeda_project"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "create_andromeda_project_with_bd_as_tcl_wrapper_out_of_prj.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/andromeda_project"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a75tfgg484-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a75tfgg484-2" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/sources/verilogmodules/register.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/double_register.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/usr_reg_access.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_cfg_register.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/pwm_dac.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/Attenuator.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/regmux_2_1.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/clockdivider.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/RF_SPI.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/debounce.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/ltc2208_derand.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_mux_2.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_variable.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/reg_to_axis.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/regmux_4_1.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/overrange_latch.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/regmux_8_1.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_constant.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_mux_4.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/cw_key_ramp.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/cvt_offsetbinary.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/I2S_rcv.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/I2S_xmit.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_adder.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/i2s_clk_lrclk_gen.v"] \
 [file normalize "${origin_dir}/sources/wrapper/andromeda_top_wrapper.v"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/512 tap TX filter_tfilter.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/cwkeyershape_960points.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/512TapLPF_corner_20KHz_tfilter.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/cwkeyershape_240points.coe"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "andromeda_top_wrapper" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/pinconstraints.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/pinconstraints.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/timingconstraints.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/timingconstraints.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/xdma_pcie2_ip-PCIE_X0Y0.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/xdma_pcie2_ip-PCIE_X0Y0.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7a75tfgg484-2" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "andromeda_top_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/register.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/double_register.v
}
if { [get_files usr_reg_access.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/usr_reg_access.v
}
if { [get_files axi_cfg_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axi_cfg_register.v
}
if { [get_files pwm_dac.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/pwm_dac.v
}
if { [get_files Attenuator.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/Attenuator.v
}
if { [get_files Attenuator.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/Attenuator.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v
}
if { [get_files clockdivider.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/clockdivider.v
}
if { [get_files RF_SPI.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/RF_SPI.v
}
if { [get_files clockdivider.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/clockdivider.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/debounce.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/double_register.v
}
if { [get_files ltc2208_derand.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/ltc2208_derand.v
}
if { [get_files ltc2208_derand.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/ltc2208_derand.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_mux_2.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/reg_to_axis.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_4_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_mux_2.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/reg_to_axis.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_4_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_mux_2.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/reg_to_axis.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_4_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_mux_2.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/reg_to_axis.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_4_1.v
}
if { [get_files overrange_latch.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/overrange_latch.v
}
if { [get_files overrange_latch.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/overrange_latch.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_8_1.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/register.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_mux_4.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_mux_4.v
}
if { [get_files cw_key_ramp.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/cw_key_ramp.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/reg_to_axis.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_variable.v
}
if { [get_files cvt_offsetbinary.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/cvt_offsetbinary.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/regmux_2_1.v
}
if { [get_files I2S_rcv.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/I2S_rcv.v
}
if { [get_files I2S_xmit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/I2S_xmit.v
}
if { [get_files axis_adder.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_adder.v
}
if { [get_files axis_adder.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_adder.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/axis_constant.v
}
if { [get_files cw_key_ramp.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/cw_key_ramp.v
}
if { [get_files i2s_clk_lrclk_gen.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/andromeda/sources/verilogmodules/i2s_clk_lrclk_gen.v
}


# Proc to create BD andromeda_top
proc cr_bd_andromeda_top { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# D_register, D_register, Double_D_register, Usr_Reg_Access, axi_cfg_register, Double_D_register, LTC2208_derandomise, LTC2208_derandomise, overrange_latch, overrange_latch, regmux_8_1, D_register, D_register, axis_constant, axis_variable, axis_variable, cvt_offset_binary, regmux_2_1, regmux_2_1, I2S_rcv, I2S_xmit, axis_adder, axis_adder, axis_constant, axis_constant, cw_key_ramp, i2s_clk_lrclk_gen, PWM_DAC, SerialAtten, SerialAtten, regmux_2_1, regmux_2_1, regmux_2_1, regmux_2_1, ClockDivider, SPI, ClockDivider, debounce, debounce, debounce, debounce, debounce, debounce, debounce, debounce, axis_mux_2, axis_variable, axis_variable, reg_to_axis, reg_to_axis, regmux_2_1, regmux_4_1, axis_mux_2, axis_variable, axis_variable, reg_to_axis, reg_to_axis, regmux_2_1, regmux_4_1, axis_mux_2, axis_variable, axis_variable, reg_to_axis, reg_to_axis, regmux_2_1, regmux_4_1, axis_mux_2, axis_variable, axis_variable, reg_to_axis, reg_to_axis, regmux_2_1, regmux_4_1, axis_constant, axis_mux_4, cw_key_ramp, reg_to_axis



  # CHANGE DESIGN NAME HERE
  set design_name andromeda_top

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  # Add USER_COMMENTS on $design_name
  set_property USER_COMMENTS.comment_0 "ADC1 RAND" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_1 "Enter Comments here" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_10 "TX data" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_11 "codec_spkr" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_2 "ADC2 RAND" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_3 "Enter Comments here" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_5 "ACD2" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_6 "ADC1" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_7 "SCK connected via CCLK by internal STARTUPE2 primitive" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_9 "RX data" [get_bd_designs $design_name]

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:util_ds_buf:2.1\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:axi_quad_spi:3.2\
  xilinx.com:ip:axis_data_fifo:2.0\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:xdma:4.1\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:axis_combiner:1.1\
  xilinx.com:ip:axis_subset_converter:1.1\
  xilinx.com:ip:fir_compiler:7.2\
  xilinx.com:ip:cic_compiler:4.0\
  xilinx.com:ip:cmpy:6.0\
  xilinx.com:ip:cordic:6.0\
  xilinx.com:ip:dds_compiler:6.0\
  xilinx.com:ip:mult_gen:12.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:util_reduced_logic:2.0\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:axis_register_slice:1.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  D_register\
  D_register\
  Double_D_register\
  Usr_Reg_Access\
  axi_cfg_register\
  Double_D_register\
  LTC2208_derandomise\
  LTC2208_derandomise\
  overrange_latch\
  overrange_latch\
  regmux_8_1\
  D_register\
  D_register\
  axis_constant\
  axis_variable\
  axis_variable\
  cvt_offset_binary\
  regmux_2_1\
  regmux_2_1\
  I2S_rcv\
  I2S_xmit\
  axis_adder\
  axis_adder\
  axis_constant\
  axis_constant\
  cw_key_ramp\
  i2s_clk_lrclk_gen\
  PWM_DAC\
  SerialAtten\
  SerialAtten\
  regmux_2_1\
  regmux_2_1\
  regmux_2_1\
  regmux_2_1\
  ClockDivider\
  SPI\
  ClockDivider\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  axis_mux_2\
  axis_variable\
  axis_variable\
  reg_to_axis\
  reg_to_axis\
  regmux_2_1\
  regmux_4_1\
  axis_mux_2\
  axis_variable\
  axis_variable\
  reg_to_axis\
  reg_to_axis\
  regmux_2_1\
  regmux_4_1\
  axis_mux_2\
  axis_variable\
  axis_variable\
  reg_to_axis\
  reg_to_axis\
  regmux_2_1\
  regmux_4_1\
  axis_mux_2\
  axis_variable\
  axis_variable\
  reg_to_axis\
  reg_to_axis\
  regmux_2_1\
  regmux_4_1\
  axis_constant\
  axis_mux_4\
  cw_key_ramp\
  reg_to_axis\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: IQ_Modulation_Select
proc create_hier_cell_IQ_Modulation_Select { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_IQ_Modulation_Select() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TX_IQ_in
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 output_axis

  # Create pins
  create_bd_pin -dir O CWSampleSelect
  create_bd_pin -dir O -from 0 -to 0 Res
  create_bd_pin -dir I -from 3 -to 0 TXConfig
  create_bd_pin -dir I -from 31 -to 0 TXTestFreq
  create_bd_pin -dir I TX_Strobe
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I cw_key_down
  create_bd_pin -dir O cw_ptt
  create_bd_pin -dir I -from 31 -to 0 keyer_config
  create_bd_pin -dir I protocol_2
  create_bd_pin -dir I -type rst resetn

  # Create instance: axis_constant_1, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_1
  if { [catch {set axis_constant_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {32} \
 ] $axis_constant_1

  # Create instance: axis_mux_4_0, and set properties
  set block_name axis_mux_4
  set block_cell_name axis_mux_4_0
  if { [catch {set axis_mux_4_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_mux_4_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CONSUME_ALL {1} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.DEST_WIDTH {0} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.KEEP_ENABLE {false} \
   CONFIG.KEEP_WIDTH {0} \
   CONFIG.USER_ENABLE {0} \
   CONFIG.USER_WIDTH {0} \
 ] $axis_mux_4_0

  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [ list \
   CONFIG.Byte_Size {9} \
   CONFIG.Coe_File {../../../../../../../sources/coefficientfiles/cwkeyershape_960points.coe} \
   CONFIG.EN_SAFETY_CKT {false} \
   CONFIG.Enable_32bit_Address {false} \
   CONFIG.Enable_A {Always_Enabled} \
   CONFIG.Load_Init_File {true} \
   CONFIG.Memory_Type {Single_Port_ROM} \
   CONFIG.Port_A_Write_Rate {0} \
   CONFIG.Read_Width_A {16} \
   CONFIG.Read_Width_B {16} \
   CONFIG.Register_PortA_Output_of_Memory_Primitives {true} \
   CONFIG.Use_Byte_Write_Enable {false} \
   CONFIG.Use_RSTA_Pin {false} \
   CONFIG.Write_Depth_A {1024} \
   CONFIG.Write_Width_A {16} \
   CONFIG.Write_Width_B {16} \
   CONFIG.use_bram_block {Stand_Alone} \
 ] $blk_mem_gen_0

  # Create instance: cw_key_ramp_0, and set properties
  set block_name cw_key_ramp
  set block_cell_name cw_key_ramp_0
  if { [catch {set cw_key_ramp_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cw_key_ramp_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.RAMP_END {959} \
   CONFIG.is_audio {0} \
 ] $cw_key_ramp_0

  # Create instance: dds_compiler_testsource, and set properties
  set dds_compiler_testsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_testsource ]
  set_property -dict [ list \
   CONFIG.Amplitude_Mode {Full_Range} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {122.88} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {14} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Negative_Cosine {false} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {29} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {94} \
 ] $dds_compiler_testsource

  # Create instance: reg_to_axis_0, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_0
  if { [catch {set reg_to_axis_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_reduced_logic_0

  # Create instance: util_vector_OR_TXgate, and set properties
  set util_vector_OR_TXgate [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_OR_TXgate ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_vector_OR_TXgate

  # Create instance: xlconst_amplQ, and set properties
  set xlconst_amplQ [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconst_amplQ ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0x00007FFF} \
   CONFIG.CONST_WIDTH {32} \
 ] $xlconst_amplQ

  # Create instance: xlslice_TXsel, and set properties
  set xlslice_TXsel [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_TXsel ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {4} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_TXsel

  # Create instance: xlslice_keyerdelay, and set properties
  set xlslice_keyerdelay [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyerdelay ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_keyerdelay

  # Create instance: xlslice_keyeren, and set properties
  set xlslice_keyeren [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyeren ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_keyeren

  # Create instance: xlslice_keyerhang, and set properties
  set xlslice_keyerhang [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyerhang ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {8} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {10} \
 ] $xlslice_keyerhang

  # Create instance: xlslice_opgate, and set properties
  set xlslice_opgate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_opgate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_opgate

  # Create interface connections
  connect_bd_intf_net -intf_net TX_IQ_in_1 [get_bd_intf_pins TX_IQ_in] [get_bd_intf_pins axis_mux_4_0/input_0_axis]
  connect_bd_intf_net -intf_net axis_constant_1_m_axis [get_bd_intf_pins axis_constant_1/m_axis] [get_bd_intf_pins dds_compiler_testsource/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net axis_mux_4_0_output_axis [get_bd_intf_pins output_axis] [get_bd_intf_pins axis_mux_4_0/output_axis]
  connect_bd_intf_net -intf_net cw_key_ramp_0_m_axis [get_bd_intf_pins axis_mux_4_0/input_3_axis] [get_bd_intf_pins cw_key_ramp_0/m_axis]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_mux_4_0/input_2_axis] [get_bd_intf_pins dds_compiler_testsource/M_AXIS_DATA]
  connect_bd_intf_net -intf_net reg_to_axis_0_m_axis [get_bd_intf_pins axis_mux_4_0/input_1_axis] [get_bd_intf_pins reg_to_axis_0/m_axis]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins TXConfig] [get_bd_pins xlslice_TXsel/Din] [get_bd_pins xlslice_opgate/Din]
  connect_bd_net -net Net1 [get_bd_pins clk] [get_bd_pins axis_constant_1/aclk] [get_bd_pins axis_mux_4_0/clk] [get_bd_pins blk_mem_gen_0/clka] [get_bd_pins cw_key_ramp_0/aclk] [get_bd_pins dds_compiler_testsource/aclk] [get_bd_pins reg_to_axis_0/aclk]
  connect_bd_net -net TX_Strobe_1 [get_bd_pins TX_Strobe] [get_bd_pins util_vector_OR_TXgate/Op2]
  connect_bd_net -net TX_Test_Freq_1 [get_bd_pins TXTestFreq] [get_bd_pins axis_constant_1/cfg_data]
  connect_bd_net -net blk_mem_gen_0_douta [get_bd_pins blk_mem_gen_0/douta] [get_bd_pins cw_key_ramp_0/bram_data]
  connect_bd_net -net cw_key_down_1 [get_bd_pins cw_key_down] [get_bd_pins cw_key_ramp_0/key_down]
  connect_bd_net -net cw_key_ramp_0_CW_PTT [get_bd_pins cw_ptt] [get_bd_pins cw_key_ramp_0/CW_PTT]
  connect_bd_net -net cw_key_ramp_0_bram_addr [get_bd_pins blk_mem_gen_0/addra] [get_bd_pins cw_key_ramp_0/bram_addr]
  connect_bd_net -net keyer_config_1 [get_bd_pins keyer_config] [get_bd_pins xlslice_keyerdelay/Din] [get_bd_pins xlslice_keyeren/Din] [get_bd_pins xlslice_keyerhang/Din]
  connect_bd_net -net resetn_1 [get_bd_pins resetn] [get_bd_pins axis_mux_4_0/rstn] [get_bd_pins cw_key_ramp_0/resetn] [get_bd_pins dds_compiler_testsource/aresetn]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins CWSampleSelect] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins Res] [get_bd_pins util_vector_OR_TXgate/Res]
  connect_bd_net -net xlconst_amplQ_dout [get_bd_pins reg_to_axis_0/data_in] [get_bd_pins xlconst_amplQ/dout]
  connect_bd_net -net xlslice_TXsel_Dout [get_bd_pins axis_mux_4_0/sel] [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins xlslice_TXsel/Dout]
  connect_bd_net -net xlslice_keyerdelay_Dout [get_bd_pins cw_key_ramp_0/delay_time] [get_bd_pins xlslice_keyerdelay/Dout]
  connect_bd_net -net xlslice_keyeren_Dout [get_bd_pins cw_key_ramp_0/keyer_enable] [get_bd_pins xlslice_keyeren/Dout]
  connect_bd_net -net xlslice_keyerhang_Dout [get_bd_pins cw_key_ramp_0/hang_time] [get_bd_pins xlslice_keyerhang/Dout]
  connect_bd_net -net xlslice_opgate_Dout [get_bd_pins util_vector_OR_TXgate/Op1] [get_bd_pins xlslice_opgate/Dout]
  connect_bd_net -net xlslice_rate_Dout [get_bd_pins protocol_2] [get_bd_pins cw_key_ramp_0/protocol_2]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Receiver_Slice_4
proc create_hier_cell_Receiver_Slice_4 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_Receiver_Slice_4() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DATA
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DATA1
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TXDDSData

  # Create pins
  create_bd_pin -dir I -from 3 -to 0 ChanConfig
  create_bd_pin -dir I -from 31 -to 0 ChanFreq
  create_bd_pin -dir I -from 8 -to 0 CicRate
  create_bd_pin -dir I TX_Strb
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -from 15 -to 0 adc1
  create_bd_pin -dir I -from 15 -to 0 adc2
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 15 -to 0 test_source
  create_bd_pin -dir O -from 15 -to 0 testsource
  create_bd_pin -dir I -from 15 -to 0 tx_samples

  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.M00_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_broadcaster_0

  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.M00_TDATA_REMAP {tdata[23:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[47:24]} \
   CONFIG.M_TDATA_NUM_BYTES {3} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
 ] $axis_broadcaster_1

  # Create instance: axis_mux_2_0, and set properties
  set block_name axis_mux_2
  set block_cell_name axis_mux_2_0
  if { [catch {set axis_mux_2_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_mux_2_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {32} \
 ] $axis_mux_2_0

  # Create instance: axis_register_slice_0, and set properties
  set axis_register_slice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.TDATA_NUM_BYTES {4} \
 ] $axis_register_slice_0

  # Create instance: axis_variable_0, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_0
  if { [catch {set axis_variable_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_0

  # Create instance: axis_variable_1, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_1
  if { [catch {set axis_variable_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_1

  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {40} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {122.88} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {10} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {24} \
   CONFIG.Quantization {Truncation} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
 ] $cic_compiler_0

  # Create instance: cic_compiler_1, and set properties
  set cic_compiler_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_1 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {40} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {122.88} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {10} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {24} \
   CONFIG.Quantization {Truncation} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
 ] $cic_compiler_1

  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [ list \
   CONFIG.OutputWidth {20} \
 ] $cmpy_0

  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {122.88} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Latency {8} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Parameter_Entry {System_Parameters} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {29} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {95} \
 ] $dds_compiler_0

  # Create instance: reg_to_axis_0, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_0
  if { [catch {set reg_to_axis_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_0

  # Create instance: reg_to_axis_1, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_1
  if { [catch {set reg_to_axis_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_1

  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {2} \
 ] $regmux_2_1_0

  # Create instance: regmux_4_1_0, and set properties
  set block_name regmux_4_1
  set block_cell_name regmux_4_1_0
  if { [catch {set regmux_4_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_4_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]

  # Create instance: xlconstant_16bits0, and set properties
  set xlconstant_16bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_16bits0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_16bits0

  # Create instance: xlconstant_7bits0, and set properties
  set xlconstant_7bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_7bits0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {7} \
 ] $xlconstant_7bits0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {4} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {4} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_2

  # Create interface connections
  connect_bd_intf_net -intf_net RxChannel1_M_AXIS_IDATA [get_bd_intf_pins M_AXIS_DATA] [get_bd_intf_pins cic_compiler_1/M_AXIS_DATA]
  connect_bd_intf_net -intf_net RxChannel1_M_AXIS_QDATA [get_bd_intf_pins M_AXIS_DATA1] [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net TXDDSData_1 [get_bd_intf_pins TXDDSData] [get_bd_intf_pins axis_mux_2_0/input_1_axis]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_broadcaster_0/M00_AXIS] [get_bd_intf_pins axis_mux_2_0/input_0_axis]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_broadcaster_0/M01_AXIS] [get_bd_intf_pins axis_register_slice_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_broadcaster_1/M00_AXIS] [get_bd_intf_pins cic_compiler_1/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_broadcaster_1/M01_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_mux_2_0_output_axis [get_bd_intf_pins axis_mux_2_0/output_axis] [get_bd_intf_pins cmpy_0/S_AXIS_B]
  connect_bd_intf_net -intf_net axis_variable_0_m_axis [get_bd_intf_pins axis_variable_0/m_axis] [get_bd_intf_pins cic_compiler_1/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net axis_variable_1_m_axis [get_bd_intf_pins axis_variable_1/m_axis] [get_bd_intf_pins cic_compiler_0/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net cmpy_0_M_AXIS_DOUT [get_bd_intf_pins axis_broadcaster_1/S_AXIS] [get_bd_intf_pins cmpy_0/M_AXIS_DOUT]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_broadcaster_0/S_AXIS] [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net reg_to_axis_0_m_axis [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE] [get_bd_intf_pins reg_to_axis_0/m_axis]
  connect_bd_intf_net -intf_net reg_to_axis_1_m_axis [get_bd_intf_pins cmpy_0/S_AXIS_A] [get_bd_intf_pins reg_to_axis_1/m_axis]

  # Create port connections
  connect_bd_net -net ChanConfig_1 [get_bd_pins ChanConfig] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net ChanFreq_1 [get_bd_pins ChanFreq] [get_bd_pins reg_to_axis_0/data_in]
  connect_bd_net -net CicRate_1 [get_bd_pins CicRate] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net TX_Strb_1 [get_bd_pins TX_Strb] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_mux_2_0/clk] [get_bd_pins axis_register_slice_0/aclk] [get_bd_pins axis_variable_0/aclk] [get_bd_pins axis_variable_1/aclk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins cic_compiler_1/aclk] [get_bd_pins cmpy_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins reg_to_axis_0/aclk] [get_bd_pins reg_to_axis_1/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins regmux_4_1_0/aclk]
  connect_bd_net -net adc1_1 [get_bd_pins adc1] [get_bd_pins regmux_4_1_0/din0]
  connect_bd_net -net adc2_1 [get_bd_pins adc2] [get_bd_pins regmux_4_1_0/din1]
  connect_bd_net -net axis_register_slice_0_m_axis_tdata [get_bd_pins axis_register_slice_0/m_axis_tdata] [get_bd_pins xlslice_2/Din]
  connect_bd_net -net mux_2_1_0_dout [get_bd_pins regmux_2_1_0/dout] [get_bd_pins regmux_4_1_0/sel] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net regmux_4_1_0_dout [get_bd_pins regmux_4_1_0/dout] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_mux_2_0/rstn] [get_bd_pins axis_register_slice_0/aresetn] [get_bd_pins axis_variable_0/aresetn] [get_bd_pins axis_variable_1/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins cic_compiler_1/aresetn] [get_bd_pins regmux_2_1_0/resetn] [get_bd_pins regmux_4_1_0/resetn]
  connect_bd_net -net test_source_1 [get_bd_pins test_source] [get_bd_pins regmux_4_1_0/din2]
  connect_bd_net -net tx_samples_1 [get_bd_pins tx_samples] [get_bd_pins regmux_4_1_0/din3]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins axis_mux_2_0/sel] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins axis_variable_0/cfg_data] [get_bd_pins axis_variable_1/cfg_data] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins reg_to_axis_1/data_in] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconstant_16bits0_dout [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconstant_16bits0/dout]
  connect_bd_net -net xlconstant_7bits0_dout [get_bd_pins xlconcat_1/In1] [get_bd_pins xlconstant_7bits0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins regmux_2_1_0/din0] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins regmux_2_1_0/din1] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins testsource] [get_bd_pins xlslice_2/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Receiver_Slice_3
proc create_hier_cell_Receiver_Slice_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_Receiver_Slice_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DATA
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DATA1
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TXDDSData

  # Create pins
  create_bd_pin -dir I -from 3 -to 0 ChanConfig
  create_bd_pin -dir I -from 31 -to 0 ChanFreq
  create_bd_pin -dir I -from 8 -to 0 CicRate
  create_bd_pin -dir I TX_Strb
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -from 15 -to 0 adc1
  create_bd_pin -dir I -from 15 -to 0 adc2
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 15 -to 0 test_source
  create_bd_pin -dir I -from 15 -to 0 tx_samples

  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.M00_TDATA_REMAP {tdata[23:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[47:24]} \
   CONFIG.M_TDATA_NUM_BYTES {3} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
 ] $axis_broadcaster_1

  # Create instance: axis_mux_2_0, and set properties
  set block_name axis_mux_2
  set block_cell_name axis_mux_2_0
  if { [catch {set axis_mux_2_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_mux_2_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {32} \
 ] $axis_mux_2_0

  # Create instance: axis_variable_0, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_0
  if { [catch {set axis_variable_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_0

  # Create instance: axis_variable_1, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_1
  if { [catch {set axis_variable_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_1

  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {40} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {122.88} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {10} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {24} \
   CONFIG.Quantization {Truncation} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
 ] $cic_compiler_0

  # Create instance: cic_compiler_1, and set properties
  set cic_compiler_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_1 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {40} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {122.88} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {10} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {24} \
   CONFIG.Quantization {Truncation} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
 ] $cic_compiler_1

  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [ list \
   CONFIG.OutputWidth {20} \
 ] $cmpy_0

  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {122.88} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Latency {8} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Parameter_Entry {System_Parameters} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {29} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {95} \
 ] $dds_compiler_0

  # Create instance: reg_to_axis_0, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_0
  if { [catch {set reg_to_axis_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_0

  # Create instance: reg_to_axis_1, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_1
  if { [catch {set reg_to_axis_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_1

  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {2} \
 ] $regmux_2_1_0

  # Create instance: regmux_4_1_0, and set properties
  set block_name regmux_4_1
  set block_cell_name regmux_4_1_0
  if { [catch {set regmux_4_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_4_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]

  # Create instance: xlconstant_16bits0, and set properties
  set xlconstant_16bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_16bits0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_16bits0

  # Create instance: xlconstant_7bits0, and set properties
  set xlconstant_7bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_7bits0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {7} \
 ] $xlconstant_7bits0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {4} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {4} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_1

  # Create interface connections
  connect_bd_intf_net -intf_net RxChannel1_M_AXIS_IDATA [get_bd_intf_pins M_AXIS_DATA] [get_bd_intf_pins cic_compiler_1/M_AXIS_DATA]
  connect_bd_intf_net -intf_net RxChannel1_M_AXIS_QDATA [get_bd_intf_pins M_AXIS_DATA1] [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net TXDDSData_1 [get_bd_intf_pins TXDDSData] [get_bd_intf_pins axis_mux_2_0/input_1_axis]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_broadcaster_1/M00_AXIS] [get_bd_intf_pins cic_compiler_1/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_broadcaster_1/M01_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_mux_2_0_output_axis [get_bd_intf_pins axis_mux_2_0/output_axis] [get_bd_intf_pins cmpy_0/S_AXIS_B]
  connect_bd_intf_net -intf_net axis_variable_0_m_axis [get_bd_intf_pins axis_variable_0/m_axis] [get_bd_intf_pins cic_compiler_1/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net axis_variable_1_m_axis [get_bd_intf_pins axis_variable_1/m_axis] [get_bd_intf_pins cic_compiler_0/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net cmpy_0_M_AXIS_DOUT [get_bd_intf_pins axis_broadcaster_1/S_AXIS] [get_bd_intf_pins cmpy_0/M_AXIS_DOUT]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_mux_2_0/input_0_axis] [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net reg_to_axis_0_m_axis [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE] [get_bd_intf_pins reg_to_axis_0/m_axis]
  connect_bd_intf_net -intf_net reg_to_axis_1_m_axis [get_bd_intf_pins cmpy_0/S_AXIS_A] [get_bd_intf_pins reg_to_axis_1/m_axis]

  # Create port connections
  connect_bd_net -net ChanConfig_1 [get_bd_pins ChanConfig] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net ChanFreq_1 [get_bd_pins ChanFreq] [get_bd_pins reg_to_axis_0/data_in]
  connect_bd_net -net CicRate_1 [get_bd_pins CicRate] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net TX_Strb_1 [get_bd_pins TX_Strb] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_mux_2_0/clk] [get_bd_pins axis_variable_0/aclk] [get_bd_pins axis_variable_1/aclk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins cic_compiler_1/aclk] [get_bd_pins cmpy_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins reg_to_axis_0/aclk] [get_bd_pins reg_to_axis_1/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins regmux_4_1_0/aclk]
  connect_bd_net -net adc1_1 [get_bd_pins adc1] [get_bd_pins regmux_4_1_0/din0]
  connect_bd_net -net adc2_1 [get_bd_pins adc2] [get_bd_pins regmux_4_1_0/din1]
  connect_bd_net -net mux_2_1_0_dout [get_bd_pins regmux_2_1_0/dout] [get_bd_pins regmux_4_1_0/sel] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net regmux_4_1_0_dout [get_bd_pins regmux_4_1_0/dout] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_mux_2_0/rstn] [get_bd_pins axis_variable_0/aresetn] [get_bd_pins axis_variable_1/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins cic_compiler_1/aresetn] [get_bd_pins regmux_2_1_0/resetn] [get_bd_pins regmux_4_1_0/resetn]
  connect_bd_net -net test_source_1 [get_bd_pins test_source] [get_bd_pins regmux_4_1_0/din2]
  connect_bd_net -net tx_samples_1 [get_bd_pins tx_samples] [get_bd_pins regmux_4_1_0/din3]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins axis_mux_2_0/sel] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins axis_variable_0/cfg_data] [get_bd_pins axis_variable_1/cfg_data] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins reg_to_axis_1/data_in] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconstant_16bits0_dout [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconstant_16bits0/dout]
  connect_bd_net -net xlconstant_7bits0_dout [get_bd_pins xlconcat_1/In1] [get_bd_pins xlconstant_7bits0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins regmux_2_1_0/din0] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins regmux_2_1_0/din1] [get_bd_pins xlslice_1/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Receiver_Slice_2
proc create_hier_cell_Receiver_Slice_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_Receiver_Slice_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DATA
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DATA1
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TXDDSData

  # Create pins
  create_bd_pin -dir I -from 3 -to 0 ChanConfig
  create_bd_pin -dir I -from 31 -to 0 ChanFreq
  create_bd_pin -dir I -from 8 -to 0 CicRate
  create_bd_pin -dir I TX_Strb
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -from 15 -to 0 adc1
  create_bd_pin -dir I -from 15 -to 0 adc2
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 15 -to 0 test_source
  create_bd_pin -dir I -from 15 -to 0 tx_samples

  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.M00_TDATA_REMAP {tdata[23:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[47:24]} \
   CONFIG.M_TDATA_NUM_BYTES {3} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
 ] $axis_broadcaster_1

  # Create instance: axis_mux_2_0, and set properties
  set block_name axis_mux_2
  set block_cell_name axis_mux_2_0
  if { [catch {set axis_mux_2_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_mux_2_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {32} \
 ] $axis_mux_2_0

  # Create instance: axis_variable_0, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_0
  if { [catch {set axis_variable_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_0

  # Create instance: axis_variable_1, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_1
  if { [catch {set axis_variable_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_1

  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {40} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {122.88} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {10} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {24} \
   CONFIG.Quantization {Truncation} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
 ] $cic_compiler_0

  # Create instance: cic_compiler_1, and set properties
  set cic_compiler_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_1 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {40} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {122.88} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {10} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {24} \
   CONFIG.Quantization {Truncation} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
 ] $cic_compiler_1

  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [ list \
   CONFIG.OutputWidth {20} \
 ] $cmpy_0

  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {122.88} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Latency {8} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Parameter_Entry {System_Parameters} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {29} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {95} \
 ] $dds_compiler_0

  # Create instance: reg_to_axis_0, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_0
  if { [catch {set reg_to_axis_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_0

  # Create instance: reg_to_axis_1, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_1
  if { [catch {set reg_to_axis_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_1

  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {2} \
 ] $regmux_2_1_0

  # Create instance: regmux_4_1_0, and set properties
  set block_name regmux_4_1
  set block_cell_name regmux_4_1_0
  if { [catch {set regmux_4_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_4_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]

  # Create instance: xlconstant_16bits0, and set properties
  set xlconstant_16bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_16bits0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_16bits0

  # Create instance: xlconstant_7bits0, and set properties
  set xlconstant_7bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_7bits0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {7} \
 ] $xlconstant_7bits0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {4} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {4} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_1

  # Create interface connections
  connect_bd_intf_net -intf_net RxChannel1_M_AXIS_IDATA [get_bd_intf_pins M_AXIS_DATA] [get_bd_intf_pins cic_compiler_1/M_AXIS_DATA]
  connect_bd_intf_net -intf_net RxChannel1_M_AXIS_QDATA [get_bd_intf_pins M_AXIS_DATA1] [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net TXDDSData_1 [get_bd_intf_pins TXDDSData] [get_bd_intf_pins axis_mux_2_0/input_1_axis]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_broadcaster_1/M00_AXIS] [get_bd_intf_pins cic_compiler_1/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_broadcaster_1/M01_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_mux_2_0_output_axis [get_bd_intf_pins axis_mux_2_0/output_axis] [get_bd_intf_pins cmpy_0/S_AXIS_B]
  connect_bd_intf_net -intf_net axis_variable_0_m_axis [get_bd_intf_pins axis_variable_0/m_axis] [get_bd_intf_pins cic_compiler_1/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net axis_variable_1_m_axis [get_bd_intf_pins axis_variable_1/m_axis] [get_bd_intf_pins cic_compiler_0/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net cmpy_0_M_AXIS_DOUT [get_bd_intf_pins axis_broadcaster_1/S_AXIS] [get_bd_intf_pins cmpy_0/M_AXIS_DOUT]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_mux_2_0/input_0_axis] [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net reg_to_axis_0_m_axis [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE] [get_bd_intf_pins reg_to_axis_0/m_axis]
  connect_bd_intf_net -intf_net reg_to_axis_1_m_axis [get_bd_intf_pins cmpy_0/S_AXIS_A] [get_bd_intf_pins reg_to_axis_1/m_axis]

  # Create port connections
  connect_bd_net -net ChanConfig_1 [get_bd_pins ChanConfig] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net ChanFreq_1 [get_bd_pins ChanFreq] [get_bd_pins reg_to_axis_0/data_in]
  connect_bd_net -net CicRate_1 [get_bd_pins CicRate] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net TX_Strb_1 [get_bd_pins TX_Strb] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_mux_2_0/clk] [get_bd_pins axis_variable_0/aclk] [get_bd_pins axis_variable_1/aclk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins cic_compiler_1/aclk] [get_bd_pins cmpy_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins reg_to_axis_0/aclk] [get_bd_pins reg_to_axis_1/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins regmux_4_1_0/aclk]
  connect_bd_net -net adc1_1 [get_bd_pins adc1] [get_bd_pins regmux_4_1_0/din0]
  connect_bd_net -net adc2_1 [get_bd_pins adc2] [get_bd_pins regmux_4_1_0/din1]
  connect_bd_net -net mux_2_1_0_dout [get_bd_pins regmux_2_1_0/dout] [get_bd_pins regmux_4_1_0/sel] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net regmux_4_1_0_dout [get_bd_pins regmux_4_1_0/dout] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_mux_2_0/rstn] [get_bd_pins axis_variable_0/aresetn] [get_bd_pins axis_variable_1/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins cic_compiler_1/aresetn] [get_bd_pins regmux_2_1_0/resetn] [get_bd_pins regmux_4_1_0/resetn]
  connect_bd_net -net test_source_1 [get_bd_pins test_source] [get_bd_pins regmux_4_1_0/din2]
  connect_bd_net -net tx_samples_1 [get_bd_pins tx_samples] [get_bd_pins regmux_4_1_0/din3]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins axis_mux_2_0/sel] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins axis_variable_0/cfg_data] [get_bd_pins axis_variable_1/cfg_data] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins reg_to_axis_1/data_in] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconstant_16bits0_dout [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconstant_16bits0/dout]
  connect_bd_net -net xlconstant_7bits0_dout [get_bd_pins xlconcat_1/In1] [get_bd_pins xlconstant_7bits0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins regmux_2_1_0/din0] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins regmux_2_1_0/din1] [get_bd_pins xlslice_1/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Receiver_Slice_1
proc create_hier_cell_Receiver_Slice_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_Receiver_Slice_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DATA
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DATA1
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TXDDSData

  # Create pins
  create_bd_pin -dir I -from 3 -to 0 ChanConfig
  create_bd_pin -dir I -from 31 -to 0 ChanFreq
  create_bd_pin -dir I -from 8 -to 0 CicRate
  create_bd_pin -dir I TX_Strb
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -from 15 -to 0 adc1
  create_bd_pin -dir I -from 15 -to 0 adc2
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 15 -to 0 test_source
  create_bd_pin -dir I -from 15 -to 0 tx_samples

  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.M00_TDATA_REMAP {tdata[23:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[47:24]} \
   CONFIG.M_TDATA_NUM_BYTES {3} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
 ] $axis_broadcaster_1

  # Create instance: axis_mux_2_0, and set properties
  set block_name axis_mux_2
  set block_cell_name axis_mux_2_0
  if { [catch {set axis_mux_2_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_mux_2_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {32} \
 ] $axis_mux_2_0

  # Create instance: axis_variable_0, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_0
  if { [catch {set axis_variable_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_0

  # Create instance: axis_variable_1, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_1
  if { [catch {set axis_variable_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_1

  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {40} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {122.88} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {10} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {24} \
   CONFIG.Quantization {Truncation} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
 ] $cic_compiler_0

  # Create instance: cic_compiler_1, and set properties
  set cic_compiler_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_1 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {40} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {122.88} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {10} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {24} \
   CONFIG.Quantization {Truncation} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
 ] $cic_compiler_1

  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [ list \
   CONFIG.OutputWidth {20} \
 ] $cmpy_0

  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {122.88} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Latency {8} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Parameter_Entry {System_Parameters} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {29} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {95} \
 ] $dds_compiler_0

  # Create instance: reg_to_axis_0, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_0
  if { [catch {set reg_to_axis_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_0

  # Create instance: reg_to_axis_1, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_1
  if { [catch {set reg_to_axis_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIN_WIDTH {32} \
 ] $reg_to_axis_1

  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {2} \
 ] $regmux_2_1_0

  # Create instance: regmux_4_1_0, and set properties
  set block_name regmux_4_1
  set block_cell_name regmux_4_1_0
  if { [catch {set regmux_4_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_4_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]

  # Create instance: xlconstant_16bits0, and set properties
  set xlconstant_16bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_16bits0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_16bits0

  # Create instance: xlconstant_7bits0, and set properties
  set xlconstant_7bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_7bits0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {7} \
 ] $xlconstant_7bits0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {4} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {4} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_1

  # Create interface connections
  connect_bd_intf_net -intf_net RxChannel1_M_AXIS_IDATA [get_bd_intf_pins M_AXIS_DATA] [get_bd_intf_pins cic_compiler_1/M_AXIS_DATA]
  connect_bd_intf_net -intf_net RxChannel1_M_AXIS_QDATA [get_bd_intf_pins M_AXIS_DATA1] [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net TXDDSData_1 [get_bd_intf_pins TXDDSData] [get_bd_intf_pins axis_mux_2_0/input_1_axis]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_broadcaster_1/M00_AXIS] [get_bd_intf_pins cic_compiler_1/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_broadcaster_1/M01_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_mux_2_0_output_axis [get_bd_intf_pins axis_mux_2_0/output_axis] [get_bd_intf_pins cmpy_0/S_AXIS_B]
  connect_bd_intf_net -intf_net axis_variable_0_m_axis [get_bd_intf_pins axis_variable_0/m_axis] [get_bd_intf_pins cic_compiler_1/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net axis_variable_1_m_axis [get_bd_intf_pins axis_variable_1/m_axis] [get_bd_intf_pins cic_compiler_0/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net cmpy_0_M_AXIS_DOUT [get_bd_intf_pins axis_broadcaster_1/S_AXIS] [get_bd_intf_pins cmpy_0/M_AXIS_DOUT]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_mux_2_0/input_0_axis] [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net reg_to_axis_0_m_axis [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE] [get_bd_intf_pins reg_to_axis_0/m_axis]
  connect_bd_intf_net -intf_net reg_to_axis_1_m_axis [get_bd_intf_pins cmpy_0/S_AXIS_A] [get_bd_intf_pins reg_to_axis_1/m_axis]

  # Create port connections
  connect_bd_net -net ChanConfig_1 [get_bd_pins ChanConfig] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net ChanFreq_1 [get_bd_pins ChanFreq] [get_bd_pins reg_to_axis_0/data_in]
  connect_bd_net -net CicRate_1 [get_bd_pins CicRate] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net TX_Strb_1 [get_bd_pins TX_Strb] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_mux_2_0/clk] [get_bd_pins axis_variable_0/aclk] [get_bd_pins axis_variable_1/aclk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins cic_compiler_1/aclk] [get_bd_pins cmpy_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins reg_to_axis_0/aclk] [get_bd_pins reg_to_axis_1/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins regmux_4_1_0/aclk]
  connect_bd_net -net adc1_1 [get_bd_pins adc1] [get_bd_pins regmux_4_1_0/din0]
  connect_bd_net -net adc2_1 [get_bd_pins adc2] [get_bd_pins regmux_4_1_0/din1]
  connect_bd_net -net mux_2_1_0_dout [get_bd_pins regmux_2_1_0/dout] [get_bd_pins regmux_4_1_0/sel] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net regmux_4_1_0_dout [get_bd_pins regmux_4_1_0/dout] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_mux_2_0/rstn] [get_bd_pins axis_variable_0/aresetn] [get_bd_pins axis_variable_1/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins cic_compiler_1/aresetn] [get_bd_pins regmux_2_1_0/resetn] [get_bd_pins regmux_4_1_0/resetn]
  connect_bd_net -net test_source_1 [get_bd_pins test_source] [get_bd_pins regmux_4_1_0/din2]
  connect_bd_net -net tx_samples_1 [get_bd_pins tx_samples] [get_bd_pins regmux_4_1_0/din3]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins axis_mux_2_0/sel] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins axis_variable_0/cfg_data] [get_bd_pins axis_variable_1/cfg_data] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins reg_to_axis_1/data_in] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconstant_16bits0_dout [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconstant_16bits0/dout]
  connect_bd_net -net xlconstant_7bits0_dout [get_bd_pins xlconcat_1/In1] [get_bd_pins xlconstant_7bits0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins regmux_2_1_0/din0] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins regmux_2_1_0/din1] [get_bd_pins xlslice_1/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: debounce
proc create_hier_cell_debounce { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_debounce() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O CW_Key_Down
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 9 -to 0 status_in
  create_bd_pin -dir O -from 9 -to 0 status_out

  # Create instance: ClockDivider_0, and set properties
  set block_name ClockDivider
  set block_cell_name ClockDivider_0
  if { [catch {set ClockDivider_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ClockDivider_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.Divisor {12000} \
 ] $ClockDivider_0

  # Create instance: debounce_0, and set properties
  set block_name debounce
  set block_cell_name debounce_0
  if { [catch {set debounce_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_0

  # Create instance: debounce_1, and set properties
  set block_name debounce
  set block_cell_name debounce_1
  if { [catch {set debounce_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_1

  # Create instance: debounce_2, and set properties
  set block_name debounce
  set block_cell_name debounce_2
  if { [catch {set debounce_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_2

  # Create instance: debounce_3, and set properties
  set block_name debounce
  set block_cell_name debounce_3
  if { [catch {set debounce_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_3 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_3

  # Create instance: debounce_4, and set properties
  set block_name debounce
  set block_cell_name debounce_4
  if { [catch {set debounce_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_4 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_4

  # Create instance: debounce_5, and set properties
  set block_name debounce
  set block_cell_name debounce_5
  if { [catch {set debounce_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_5 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_5

  # Create instance: debounce_6, and set properties
  set block_name debounce
  set block_cell_name debounce_6
  if { [catch {set debounce_6 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_6 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_6

  # Create instance: debounce_8, and set properties
  set block_name debounce
  set block_cell_name debounce_8
  if { [catch {set debounce_8 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_8 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.debounce_count {10} \
 ] $debounce_8

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {2} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN8_WIDTH {2} \
   CONFIG.NUM_PORTS {9} \
 ] $xlconcat_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {10} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {8} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {2} \
 ] $xlslice_8

  # Create port connections
  connect_bd_net -net ClockDivider_0_TCN [get_bd_pins ClockDivider_0/TCN] [get_bd_pins debounce_0/ce_n] [get_bd_pins debounce_1/ce_n] [get_bd_pins debounce_2/ce_n] [get_bd_pins debounce_3/ce_n] [get_bd_pins debounce_4/ce_n] [get_bd_pins debounce_5/ce_n] [get_bd_pins debounce_6/ce_n] [get_bd_pins debounce_8/ce_n]
  connect_bd_net -net Net3 [get_bd_pins status_in] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din]
  connect_bd_net -net clk_1 [get_bd_pins clk] [get_bd_pins ClockDivider_0/aclk] [get_bd_pins debounce_0/aclk] [get_bd_pins debounce_1/aclk] [get_bd_pins debounce_2/aclk] [get_bd_pins debounce_3/aclk] [get_bd_pins debounce_4/aclk] [get_bd_pins debounce_5/aclk] [get_bd_pins debounce_6/aclk] [get_bd_pins debounce_8/aclk]
  connect_bd_net -net debounce_0_clean_pbn [get_bd_pins debounce_0/clean_pbn] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net debounce_1_clean_pbn [get_bd_pins debounce_1/clean_pbn] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net debounce_2_clean_pbn [get_bd_pins debounce_2/clean_pbn] [get_bd_pins xlconcat_0/In2] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net debounce_3_clean_pbn [get_bd_pins debounce_3/clean_pbn] [get_bd_pins xlconcat_0/In3] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net debounce_4_clean_pb [get_bd_pins debounce_4/clean_pb] [get_bd_pins xlconcat_0/In4]
  connect_bd_net -net debounce_5_clean_pb [get_bd_pins debounce_5/clean_pb] [get_bd_pins xlconcat_0/In5]
  connect_bd_net -net debounce_6_clean_pb [get_bd_pins debounce_6/clean_pb] [get_bd_pins xlconcat_0/In6]
  connect_bd_net -net debounce_8_clean_pb [get_bd_pins debounce_8/clean_pb] [get_bd_pins xlconcat_0/In7]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins ClockDivider_0/resetn]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins CW_Key_Down] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins status_out] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins debounce_0/pb_in] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout1 [get_bd_pins debounce_1/pb_in] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins debounce_2/pb_in] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins debounce_3/pb_in] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins debounce_4/pb_in] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout1 [get_bd_pins debounce_5/pb_in] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout1 [get_bd_pins debounce_6/pb_in] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins debounce_8/pb_in] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_8/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Strobes
proc create_hier_cell_Strobes { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_Strobes() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 1 -to 0 ADC_Randomise
  create_bd_pin -dir O -from 0 -to 0 ATU_TUNE
  create_bd_pin -dir O -from 0 -to 0 BIAS_CTRL
  create_bd_pin -dir O -from 0 -to 0 CLASS_E_SEL
  create_bd_pin -dir O CTRL_TRSW
  create_bd_pin -dir O -from 23 -to 0 GPIO_OUT
  create_bd_pin -dir O -from 0 -to 0 MOX_strobe
  create_bd_pin -dir O -from 0 -to 0 PURESIGNAL_ENABLE
  create_bd_pin -dir I -from 31 -to 0 RF_GPIO
  create_bd_pin -dir O TXRX_RELAY
  create_bd_pin -dir I -from 0 -to 0 keyer_PTT

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {2} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: util_reduced_logic_1, and set properties
  set util_reduced_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_1 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_reduced_logic_1

  # Create instance: util_reduced_logic_2, and set properties
  set util_reduced_logic_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_2 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_reduced_logic_2

  # Create instance: util_reduced_logic_3, and set properties
  set util_reduced_logic_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_3 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {and} \
   CONFIG.C_SIZE {2} \
   CONFIG.LOGO_FILE {data/sym_andgate.png} \
 ] $util_reduced_logic_3

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_1

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_2

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_3

  # Create instance: xlconcat_4, and set properties
  set xlconcat_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_4 ]

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $xlconstant_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DOUT_WIDTH {24} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create port connections
  connect_bd_net -net RF_GPIO_1 [get_bd_pins RF_GPIO] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net keyer_PTT_1 [get_bd_pins keyer_PTT] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins util_reduced_logic_0/Res] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net util_reduced_logic_1_Res [get_bd_pins MOX_strobe] [get_bd_pins util_reduced_logic_1/Res] [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net util_reduced_logic_2_Res [get_bd_pins CTRL_TRSW] [get_bd_pins util_reduced_logic_2/Res]
  connect_bd_net -net util_reduced_logic_3_Res [get_bd_pins TXRX_RELAY] [get_bd_pins util_reduced_logic_3/Res]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins util_vector_logic_0/Res] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins util_reduced_logic_1/Op1] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins util_reduced_logic_2/Op1] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins util_reduced_logic_3/Op1] [get_bd_pins xlconcat_3/dout]
  connect_bd_net -net xlconcat_4_dout [get_bd_pins ADC_Randomise] [get_bd_pins xlconcat_4/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins BIAS_CTRL] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins GPIO_OUT] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins CLASS_E_SEL] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_1/In0] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_2/In0] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins ATU_TUNE] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins PURESIGNAL_ENABLE] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins util_vector_logic_0/Op1] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_4/In0] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_4/In1] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: RF_SPI_Shift
proc create_hier_cell_RF_SPI_Shift { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_RF_SPI_Shift() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -type clk RF_SPI_CK
  create_bd_pin -dir O RF_SPI_DATA
  create_bd_pin -dir O RF_SPI_RX_LOAD
  create_bd_pin -dir O RF_SPI_TX_LOAD
  create_bd_pin -dir I -from 31 -to 0 RX_SPI
  create_bd_pin -dir I -from 15 -to 0 TX_SPI
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 0 -to 0 tx_strobe

  # Create instance: ClockDivider_0, and set properties
  set block_name ClockDivider
  set block_cell_name ClockDivider_0
  if { [catch {set ClockDivider_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ClockDivider_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.Divisor {12} \
 ] $ClockDivider_0

  # Create instance: SPI_0, and set properties
  set block_name SPI
  set block_cell_name SPI_0
  if { [catch {set SPI_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $SPI_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {11} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {4} \
   CONFIG.NUM_PORTS {3} \
 ] $xlconcat_1

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {16} \
   CONFIG.DOUT_WIDTH {11} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {12} \
   CONFIG.DIN_WIDTH {16} \
   CONFIG.DOUT_WIDTH {4} \
 ] $xlslice_1

  # Create port connections
  connect_bd_net -net ClockDivider_0_TCN [get_bd_pins ClockDivider_0/TCN] [get_bd_pins SPI_0/ce_n]
  connect_bd_net -net Net2 [get_bd_pins TX_SPI] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net RX_SPI_1 [get_bd_pins RX_SPI] [get_bd_pins SPI_0/Rx_data]
  connect_bd_net -net SPI_0_Rx_load_strobe [get_bd_pins RF_SPI_RX_LOAD] [get_bd_pins SPI_0/Rx_load_strobe]
  connect_bd_net -net SPI_0_SPI_clock [get_bd_pins RF_SPI_CK] [get_bd_pins SPI_0/SPI_clock]
  connect_bd_net -net SPI_0_SPI_data [get_bd_pins RF_SPI_DATA] [get_bd_pins SPI_0/SPI_data]
  connect_bd_net -net SPI_0_Tx_load_strobe [get_bd_pins RF_SPI_TX_LOAD] [get_bd_pins SPI_0/Tx_load_strobe]
  connect_bd_net -net clk_1 [get_bd_pins clk] [get_bd_pins ClockDivider_0/aclk] [get_bd_pins SPI_0/aclk]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins ClockDivider_0/resetn] [get_bd_pins SPI_0/resetn]
  connect_bd_net -net tx_strobe_1 [get_bd_pins tx_strobe] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins SPI_0/Tx_data] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_1/In0] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_1/In2] [get_bd_pins xlslice_1/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: AttenDrivers
proc create_hier_cell_AttenDrivers { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_AttenDrivers() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -type clk ADC1_ATTEN_CLK
  create_bd_pin -dir O ADC1_ATTEN_DAT
  create_bd_pin -dir O ADC1_ATTEN_LE
  create_bd_pin -dir O -type clk ADC2_ATTEN_CLK
  create_bd_pin -dir O ADC2_ATTEN_DAT
  create_bd_pin -dir O ADC2_ATTEN_LE
  create_bd_pin -dir I -from 31 -to 0 ADC_Ctrl
  create_bd_pin -dir I -from 31 -to 0 DAC_Ctrl
  create_bd_pin -dir O -from 5 -to 0 Dac_Atten
  create_bd_pin -dir O TX_DAC_PWM
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I tx_strobe

  # Create instance: PWM_DAC_0, and set properties
  set block_name PWM_DAC
  set block_cell_name PWM_DAC_0
  if { [catch {set PWM_DAC_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $PWM_DAC_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: SerialAtten_0, and set properties
  set block_name SerialAtten
  set block_cell_name SerialAtten_0
  if { [catch {set SerialAtten_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $SerialAtten_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: SerialAtten_1, and set properties
  set block_name SerialAtten
  set block_cell_name SerialAtten_1
  if { [catch {set SerialAtten_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $SerialAtten_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {8} \
 ] $regmux_2_1_0

  # Create instance: regmux_2_1_1, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_1
  if { [catch {set regmux_2_1_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {6} \
 ] $regmux_2_1_1

  # Create instance: regmux_2_1_2, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_2
  if { [catch {set regmux_2_1_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {5} \
 ] $regmux_2_1_2

  # Create instance: regmux_2_1_3, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_3
  if { [catch {set regmux_2_1_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_3 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {5} \
 ] $regmux_2_1_3

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $xlconstant_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {6} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {6} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {5} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {5} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {5} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {10} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {5} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {15} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {5} \
 ] $xlslice_7

  # Create port connections
  connect_bd_net -net Net [get_bd_pins ADC_Ctrl] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din]
  connect_bd_net -net Net1 [get_bd_pins DAC_Ctrl] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din]
  connect_bd_net -net PWM_DAC_0_DAC_bit [get_bd_pins TX_DAC_PWM] [get_bd_pins PWM_DAC_0/DAC_bit]
  connect_bd_net -net SerialAtten_0_ATTN_CLK [get_bd_pins ADC1_ATTEN_CLK] [get_bd_pins SerialAtten_0/ATTN_CLK]
  connect_bd_net -net SerialAtten_0_ATTN_DATA [get_bd_pins ADC1_ATTEN_DAT] [get_bd_pins SerialAtten_0/ATTN_DATA]
  connect_bd_net -net SerialAtten_0_ATTN_LE [get_bd_pins ADC1_ATTEN_LE] [get_bd_pins SerialAtten_0/ATTN_LE]
  connect_bd_net -net SerialAtten_1_ATTN_CLK [get_bd_pins ADC2_ATTEN_CLK] [get_bd_pins SerialAtten_1/ATTN_CLK]
  connect_bd_net -net SerialAtten_1_ATTN_DATA [get_bd_pins ADC2_ATTEN_DAT] [get_bd_pins SerialAtten_1/ATTN_DATA]
  connect_bd_net -net SerialAtten_1_ATTN_LE [get_bd_pins ADC2_ATTEN_LE] [get_bd_pins SerialAtten_1/ATTN_LE]
  connect_bd_net -net clk_1 [get_bd_pins clk] [get_bd_pins PWM_DAC_0/aclk] [get_bd_pins SerialAtten_0/aclk] [get_bd_pins SerialAtten_1/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins regmux_2_1_1/aclk] [get_bd_pins regmux_2_1_2/aclk] [get_bd_pins regmux_2_1_3/aclk]
  connect_bd_net -net regmux_2_1_0_dout [get_bd_pins PWM_DAC_0/PWM_source] [get_bd_pins regmux_2_1_0/dout]
  connect_bd_net -net regmux_2_1_1_dout [get_bd_pins Dac_Atten] [get_bd_pins regmux_2_1_1/dout]
  connect_bd_net -net regmux_2_1_2_dout [get_bd_pins SerialAtten_0/data] [get_bd_pins regmux_2_1_2/dout]
  connect_bd_net -net regmux_2_1_3_dout [get_bd_pins SerialAtten_1/data] [get_bd_pins regmux_2_1_3/dout]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins SerialAtten_0/resetn] [get_bd_pins SerialAtten_1/resetn] [get_bd_pins regmux_2_1_0/resetn] [get_bd_pins regmux_2_1_1/resetn] [get_bd_pins regmux_2_1_2/resetn] [get_bd_pins regmux_2_1_3/resetn]
  connect_bd_net -net tx_strobe_1 [get_bd_pins tx_strobe] [get_bd_pins regmux_2_1_0/sel] [get_bd_pins regmux_2_1_1/sel] [get_bd_pins regmux_2_1_2/sel] [get_bd_pins regmux_2_1_3/sel]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins SerialAtten_0/ce_n] [get_bd_pins SerialAtten_1/ce_n] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins regmux_2_1_0/din0] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins regmux_2_1_0/din1] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins regmux_2_1_1/din0] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins regmux_2_1_1/din1] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins regmux_2_1_2/din1] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins regmux_2_1_2/din0] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins regmux_2_1_3/din0] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins regmux_2_1_3/din1] [get_bd_pins xlslice_7/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: clock_generator
proc create_hier_cell_clock_generator { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_clock_generator() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I clock_122_in_n
  create_bd_pin -dir I -type clk clock_122_in_p
  create_bd_pin -dir O -type clk clock_122_out
  create_bd_pin -dir O clock_122_out_delayed
  create_bd_pin -dir O -type clk clock_12_out
  create_bd_pin -dir O pll_cr
  create_bd_pin -dir I -from 0 -to 0 ref_in_10
  create_bd_pin -dir I -from 0 -to 0 resetn

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property USER_COMMENTS.comment_14 "main 122MHz clock distribute" [get_bd_cells /clock_generator/clk_wiz_0]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {81.38} \
   CONFIG.CLKOUT1_DRIVES {BUFG} \
   CONFIG.CLKOUT1_JITTER {121.076} \
   CONFIG.CLKOUT1_PHASE_ERROR {98.137} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {122.88} \
   CONFIG.CLKOUT2_DRIVES {BUFG} \
   CONFIG.CLKOUT2_JITTER {192.138} \
   CONFIG.CLKOUT2_PHASE_ERROR {98.137} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {12.288} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.CLKOUT3_DRIVES {BUFG} \
   CONFIG.CLKOUT3_JITTER {121.076} \
   CONFIG.CLKOUT3_PHASE_ERROR {98.137} \
   CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {122.88} \
   CONFIG.CLKOUT3_REQUESTED_PHASE {0} \
   CONFIG.CLKOUT3_USED {true} \
   CONFIG.CLKOUT4_DRIVES {BUFG} \
   CONFIG.CLKOUT5_DRIVES {BUFG} \
   CONFIG.CLKOUT6_DRIVES {BUFG} \
   CONFIG.CLKOUT7_DRIVES {BUFG} \
   CONFIG.FEEDBACK_SOURCE {FDBK_AUTO} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {8.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {8.138} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.000} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {8.000} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {80} \
   CONFIG.MMCM_CLKOUT2_DIVIDE {8} \
   CONFIG.MMCM_CLKOUT2_PHASE {0.000} \
   CONFIG.MMCM_COMPENSATION {ZHOLD} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.NUM_OUT_CLKS {3} \
   CONFIG.PRIMITIVE {MMCM} \
   CONFIG.PRIM_IN_FREQ {122.88} \
   CONFIG.PRIM_SOURCE {Differential_clock_capable_pin} \
 ] $clk_wiz_0

  # Create instance: clk_wiz_1, and set properties
  set clk_wiz_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_1 ]
  set_property USER_COMMENTS.comment_15 "divide to 10MHz for PLL" [get_bd_cells /clock_generator/clk_wiz_1]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {81.38} \
   CONFIG.CLKOUT1_JITTER {237.724} \
   CONFIG.CLKOUT1_PHASE_ERROR {111.288} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {10} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {15.625} \
   CONFIG.MMCM_CLKIN1_PERIOD {8.138} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {96.000} \
   CONFIG.MMCM_DIVCLK_DIVIDE {2} \
   CONFIG.PRIM_IN_FREQ {122.88} \
   CONFIG.PRIM_SOURCE {No_buffer} \
 ] $clk_wiz_1

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {xor} \
   CONFIG.C_SIZE {2} \
   CONFIG.LOGO_FILE {data/sym_xorgate.png} \
 ] $util_reduced_logic_0

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]

  # Create port connections
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins clock_122_out] [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins clk_wiz_1/clk_in1]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins clock_12_out] [get_bd_pins clk_wiz_0/clk_out2]
  connect_bd_net -net clk_wiz_0_clk_out3 [get_bd_pins clock_122_out_delayed] [get_bd_pins clk_wiz_0/clk_out3]
  connect_bd_net -net clk_wiz_1_clk_out1 [get_bd_pins clk_wiz_1/clk_out1] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net clock_122_in_n_1 [get_bd_pins clock_122_in_n] [get_bd_pins clk_wiz_0/clk_in1_n]
  connect_bd_net -net clock_122_in_p_1 [get_bd_pins clock_122_in_p] [get_bd_pins clk_wiz_0/clk_in1_p]
  connect_bd_net -net ref_in_10_1 [get_bd_pins ref_in_10] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net resetn_1 [get_bd_pins resetn] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins pll_cr] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins clk_wiz_0/reset] [get_bd_pins clk_wiz_1/reset] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: audio_codec
proc create_hier_cell_audio_codec { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_audio_codec() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 LR_Spkr_data
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 RX_Audio_Data

  # Create pins
  create_bd_pin -dir O -type clk BCLK
  create_bd_pin -dir I -from 31 -to 0 CodecConfig
  create_bd_pin -dir O -type clk LRCLK
  create_bd_pin -dir O MCLK
  create_bd_pin -dir I -type rst arstn
  create_bd_pin -dir I -type clk clk1
  create_bd_pin -dir I cw_key
  create_bd_pin -dir O cw_ptt
  create_bd_pin -dir I i2srxd
  create_bd_pin -dir O i2stxd
  create_bd_pin -dir I -from 31 -to 0 keyer_config

  # Create instance: I2S_rcv_0, and set properties
  set block_name I2S_rcv
  set block_cell_name I2S_rcv_0
  if { [catch {set I2S_rcv_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $I2S_rcv_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: I2S_xmit_0, and set properties
  set block_name I2S_xmit
  set block_cell_name I2S_xmit_0
  if { [catch {set I2S_xmit_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $I2S_xmit_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_adder_0, and set properties
  set block_name axis_adder
  set block_cell_name axis_adder_0
  if { [catch {set axis_adder_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_adder_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_SIGNED {TRUE} \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_adder_0

  # Create instance: axis_adder_1, and set properties
  set block_name axis_adder
  set block_cell_name axis_adder_1
  if { [catch {set axis_adder_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_adder_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_SIGNED {TRUE} \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_adder_1

  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {1} \
   CONFIG.M00_TDATA_REMAP {tdata[15:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[31:16]} \
   CONFIG.M_TDATA_NUM_BYTES {2} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_broadcaster_0

  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {1} \
   CONFIG.M00_TDATA_REMAP {tdata[15:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[31:16]} \
   CONFIG.M_TDATA_NUM_BYTES {2} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_broadcaster_1

  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]

  # Create instance: axis_constant_2, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_2
  if { [catch {set axis_constant_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_constant_2

  # Create instance: axis_constant_3, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_3
  if { [catch {set axis_constant_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_3 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_constant_3

  # Create instance: axis_subset_converter_0, and set properties
  set axis_subset_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
   CONFIG.TDATA_REMAP {tdata[31:0]} \
 ] $axis_subset_converter_0

  # Create instance: axis_subset_converter_1, and set properties
  set axis_subset_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_1 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {2} \
   CONFIG.TDATA_REMAP {16'b0000000000000000,tdata[15:0]} \
 ] $axis_subset_converter_1

  # Create instance: axis_subset_converter_2, and set properties
  set axis_subset_converter_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_2 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {2} \
   CONFIG.TDATA_REMAP {16'b0000000000000000,tdata[15:0]} \
 ] $axis_subset_converter_2

  # Create instance: axis_subset_converter_3, and set properties
  set axis_subset_converter_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_3 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
   CONFIG.TDATA_REMAP {tdata[39:24],tdata[15:0]} \
 ] $axis_subset_converter_3

  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [ list \
   CONFIG.Byte_Size {9} \
   CONFIG.Coe_File {../../../../../../../sources/coefficientfiles/cwkeyershape_240points.coe} \
   CONFIG.EN_SAFETY_CKT {false} \
   CONFIG.Enable_32bit_Address {false} \
   CONFIG.Enable_A {Always_Enabled} \
   CONFIG.Fill_Remaining_Memory_Locations {true} \
   CONFIG.Load_Init_File {true} \
   CONFIG.Memory_Type {Single_Port_ROM} \
   CONFIG.Port_A_Write_Rate {0} \
   CONFIG.Read_Width_A {16} \
   CONFIG.Read_Width_B {16} \
   CONFIG.Register_PortA_Output_of_Memory_Primitives {true} \
   CONFIG.Remaining_Memory_Locations {7FFF} \
   CONFIG.Use_Byte_Write_Enable {false} \
   CONFIG.Use_RSTA_Pin {false} \
   CONFIG.Write_Depth_A {256} \
   CONFIG.Write_Width_A {16} \
   CONFIG.Write_Width_B {16} \
   CONFIG.use_bram_block {Stand_Alone} \
 ] $blk_mem_gen_0

  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [ list \
   CONFIG.FlowControl {Blocking} \
   CONFIG.MinimumLatency {9} \
   CONFIG.OutputWidth {18} \
   CONFIG.RoundMode {Truncate} \
 ] $cmpy_0

  # Create instance: cmpy_1, and set properties
  set cmpy_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_1 ]
  set_property -dict [ list \
   CONFIG.BPortWidth {18} \
   CONFIG.FlowControl {Blocking} \
   CONFIG.MinimumLatency {9} \
   CONFIG.OutputWidth {20} \
 ] $cmpy_1

  # Create instance: cw_key_ramp_0, and set properties
  set block_name cw_key_ramp
  set block_cell_name cw_key_ramp_0
  if { [catch {set cw_key_ramp_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cw_key_ramp_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {0.048} \
   CONFIG.Frequency_Resolution {1} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {14} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Selection {Sine} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {16} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {96} \
 ] $dds_compiler_0

  # Create instance: i2s_clk_lrclk_gen_0, and set properties
  set block_name i2s_clk_lrclk_gen
  set block_cell_name i2s_clk_lrclk_gen_0
  if { [catch {set i2s_clk_lrclk_gen_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $i2s_clk_lrclk_gen_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {1} \
 ] $xlconstant_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {10} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_2

  # Create instance: xlslice_keyerdelay, and set properties
  set xlslice_keyerdelay [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyerdelay ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {8} \
 ] $xlslice_keyerdelay

  # Create instance: xlslice_keyeren, and set properties
  set xlslice_keyeren [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyeren ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_keyeren

  # Create instance: xlslice_keyerhang, and set properties
  set xlslice_keyerhang [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyerhang ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {8} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {10} \
 ] $xlslice_keyerhang

  # Create interface connections
  connect_bd_intf_net -intf_net I2S_rcv_0_mrecv_axis [get_bd_intf_pins I2S_rcv_0/mrecv_axis] [get_bd_intf_pins axis_subset_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net LR_Spkr_data_1 [get_bd_intf_pins LR_Spkr_data] [get_bd_intf_pins axis_broadcaster_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_adder_0_m_axis [get_bd_intf_pins axis_adder_0/m_axis] [get_bd_intf_pins axis_combiner_0/S01_AXIS]
  connect_bd_intf_net -intf_net axis_adder_1_m_axis [get_bd_intf_pins axis_adder_1/m_axis] [get_bd_intf_pins axis_combiner_0/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_adder_1/s_axis_a] [get_bd_intf_pins axis_broadcaster_0/M00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_adder_0/s_axis_a] [get_bd_intf_pins axis_broadcaster_0/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_adder_1/s_axis_b] [get_bd_intf_pins axis_broadcaster_1/M00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_adder_0/s_axis_b] [get_bd_intf_pins axis_broadcaster_1/M01_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins I2S_xmit_0/sxmit_axis] [get_bd_intf_pins axis_combiner_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_constant_2_m_axis [get_bd_intf_pins axis_constant_2/m_axis] [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net axis_constant_3_m_axis [get_bd_intf_pins axis_constant_3/m_axis] [get_bd_intf_pins axis_subset_converter_2/S_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_0_M_AXIS [get_bd_intf_pins RX_Audio_Data] [get_bd_intf_pins axis_subset_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_1_M_AXIS [get_bd_intf_pins axis_subset_converter_1/M_AXIS] [get_bd_intf_pins cmpy_0/S_AXIS_B]
  connect_bd_intf_net -intf_net axis_subset_converter_2_M_AXIS [get_bd_intf_pins axis_subset_converter_2/M_AXIS] [get_bd_intf_pins cmpy_1/S_AXIS_A]
  connect_bd_intf_net -intf_net axis_subset_converter_3_M_AXIS [get_bd_intf_pins axis_broadcaster_1/S_AXIS] [get_bd_intf_pins axis_subset_converter_3/M_AXIS]
  connect_bd_intf_net -intf_net cmpy_0_M_AXIS_DOUT [get_bd_intf_pins cmpy_0/M_AXIS_DOUT] [get_bd_intf_pins cmpy_1/S_AXIS_B]
  connect_bd_intf_net -intf_net cmpy_1_M_AXIS_DOUT [get_bd_intf_pins axis_subset_converter_3/S_AXIS] [get_bd_intf_pins cmpy_1/M_AXIS_DOUT]
  connect_bd_intf_net -intf_net cw_key_ramp_0_m_axis [get_bd_intf_pins cmpy_0/S_AXIS_A] [get_bd_intf_pins cw_key_ramp_0/m_axis]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_subset_converter_1/S_AXIS] [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net CodecConfig_1 [get_bd_pins CodecConfig] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_2/Din]
  connect_bd_net -net I2S_xmit_0_outbit [get_bd_pins i2stxd] [get_bd_pins I2S_xmit_0/outbit]
  connect_bd_net -net Net3 [get_bd_pins MCLK] [get_bd_pins clk1] [get_bd_pins I2S_rcv_0/aclk] [get_bd_pins I2S_xmit_0/aclk] [get_bd_pins axis_adder_0/aclk] [get_bd_pins axis_adder_1/aclk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_constant_2/aclk] [get_bd_pins axis_constant_3/aclk] [get_bd_pins axis_subset_converter_0/aclk] [get_bd_pins axis_subset_converter_1/aclk] [get_bd_pins axis_subset_converter_2/aclk] [get_bd_pins axis_subset_converter_3/aclk] [get_bd_pins blk_mem_gen_0/clka] [get_bd_pins cmpy_0/aclk] [get_bd_pins cmpy_1/aclk] [get_bd_pins cw_key_ramp_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins i2s_clk_lrclk_gen_0/CLK_IN]
  connect_bd_net -net arstn_1 [get_bd_pins arstn] [get_bd_pins I2S_rcv_0/resetn] [get_bd_pins I2S_xmit_0/resetn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_subset_converter_0/aresetn] [get_bd_pins axis_subset_converter_1/aresetn] [get_bd_pins axis_subset_converter_2/aresetn] [get_bd_pins axis_subset_converter_3/aresetn] [get_bd_pins cw_key_ramp_0/resetn] [get_bd_pins i2s_clk_lrclk_gen_0/resetn]
  connect_bd_net -net blk_mem_gen_0_douta [get_bd_pins blk_mem_gen_0/douta] [get_bd_pins cw_key_ramp_0/bram_data]
  connect_bd_net -net cw_key_1 [get_bd_pins cw_key] [get_bd_pins cw_key_ramp_0/key_down]
  connect_bd_net -net cw_key_ramp_0_CW_PTT [get_bd_pins cw_ptt] [get_bd_pins cw_key_ramp_0/CW_PTT]
  connect_bd_net -net cw_key_ramp_0_bram_addr [get_bd_pins cw_key_ramp_0/bram_addr] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net i2s_clk_lrclk_gen_0_BCLK [get_bd_pins BCLK] [get_bd_pins I2S_rcv_0/BCLK] [get_bd_pins i2s_clk_lrclk_gen_0/BCLK]
  connect_bd_net -net i2s_clk_lrclk_gen_0_Bfall [get_bd_pins I2S_rcv_0/Bfall] [get_bd_pins I2S_xmit_0/CBfall] [get_bd_pins i2s_clk_lrclk_gen_0/Bfall]
  connect_bd_net -net i2s_clk_lrclk_gen_0_Brise [get_bd_pins I2S_rcv_0/Brise] [get_bd_pins I2S_xmit_0/CBrise] [get_bd_pins i2s_clk_lrclk_gen_0/Brise]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRCLK [get_bd_pins LRCLK] [get_bd_pins I2S_rcv_0/LRCLK] [get_bd_pins I2S_xmit_0/lrclk] [get_bd_pins i2s_clk_lrclk_gen_0/LRCLK]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRfall [get_bd_pins I2S_rcv_0/LRfall] [get_bd_pins i2s_clk_lrclk_gen_0/LRfall]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRrise [get_bd_pins I2S_rcv_0/LRrise] [get_bd_pins i2s_clk_lrclk_gen_0/LRrise]
  connect_bd_net -net is2rxd_1 [get_bd_pins i2srxd] [get_bd_pins I2S_rcv_0/din]
  connect_bd_net -net keyer_config_1 [get_bd_pins keyer_config] [get_bd_pins xlslice_keyerdelay/Din] [get_bd_pins xlslice_keyeren/Din] [get_bd_pins xlslice_keyerhang/Din]
  connect_bd_net -net xlconstant_0_dout1 [get_bd_pins cw_key_ramp_0/protocol_2] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins axis_constant_3/cfg_data] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins blk_mem_gen_0/addra] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins axis_constant_2/cfg_data] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_keyerdelay_Dout [get_bd_pins cw_key_ramp_0/delay_time] [get_bd_pins xlslice_keyerdelay/Dout]
  connect_bd_net -net xlslice_keyeren_Dout [get_bd_pins cw_key_ramp_0/keyer_enable] [get_bd_pins xlslice_keyeren/Dout]
  connect_bd_net -net xlslice_keyerhang_Dout [get_bd_pins cw_key_ramp_0/hang_time] [get_bd_pins xlslice_keyerhang/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Transmitter
proc create_hier_cell_Transmitter { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_Transmitter() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 TX_DDS_IQ
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TX_IQ_In

  # Create pins
  create_bd_pin -dir O CWSampleSelect
  create_bd_pin -dir O -from 0 -to 0 DAC_SPI_CK
  create_bd_pin -dir I DAC_SPI_MISO
  create_bd_pin -dir O -from 0 -to 0 DAC_SPI_MOSI
  create_bd_pin -dir O -from 0 -to 0 DAC_SPI_SSn
  create_bd_pin -dir I -from 31 -to 0 TXConfig
  create_bd_pin -dir O -from 15 -to 0 TXDACData
  create_bd_pin -dir I -from 31 -to 0 TXLOTune
  create_bd_pin -dir O -from 15 -to 0 TXMagnitude
  create_bd_pin -dir O -from 15 -to 0 TXSamplesToRX
  create_bd_pin -dir I TXStrobe
  create_bd_pin -dir I -from 31 -to 0 TXTestFreq
  create_bd_pin -dir I -type clk clk2
  create_bd_pin -dir I cw_key_down
  create_bd_pin -dir O cw_ptt1
  create_bd_pin -dir I -from 31 -to 0 keyer_config
  create_bd_pin -dir I -type rst resetn1

  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {16} \
 ] $D_register_2

  # Create instance: IQ_Modulation_Select
  create_hier_cell_IQ_Modulation_Select $hier_obj IQ_Modulation_Select

  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.M00_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_broadcaster_0

  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.M00_TDATA_REMAP {tdata[47:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[47:0]} \
   CONFIG.M_TDATA_NUM_BYTES {6} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
 ] $axis_broadcaster_1

  # Create instance: axis_broadcaster_cic_path_split, and set properties
  set axis_broadcaster_cic_path_split [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_cic_path_split ]
  set_property -dict [ list \
   CONFIG.M00_TDATA_REMAP {tdata[23:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[47:24]} \
   CONFIG.M_TDATA_NUM_BYTES {3} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
 ] $axis_broadcaster_cic_path_split

  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]
  set_property -dict [ list \
   CONFIG.TDATA_NUM_BYTES {3} \
 ] $axis_combiner_0

  # Create instance: axis_constant_0, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_0
  if { [catch {set axis_constant_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {2} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_dwidth_converter_fir_to_IQ, and set properties
  set axis_dwidth_converter_fir_to_IQ [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_fir_to_IQ ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {6} \
   CONFIG.S_TDATA_NUM_BYTES {3} \
 ] $axis_dwidth_converter_fir_to_IQ

  # Create instance: axis_variable_0, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_0
  if { [catch {set axis_variable_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_0

  # Create instance: axis_variable_1, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_1
  if { [catch {set axis_variable_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_variable_1

  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Fixed_Or_Initial_Rate {80} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.HAS_DOUT_TREADY {false} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {1.536} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {80} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {23} \
   CONFIG.Quantization {Truncation} \
   CONFIG.SamplePeriod {80} \
   CONFIG.Sample_Rate_Changes {Programmable} \
 ] $cic_compiler_0

  # Create instance: cic_compiler_1, and set properties
  set cic_compiler_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_1 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.Fixed_Or_Initial_Rate {80} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.HAS_DOUT_TREADY {false} \
   CONFIG.Input_Data_Width {20} \
   CONFIG.Input_Sample_Frequency {1.536} \
   CONFIG.Maximum_Rate {320} \
   CONFIG.Minimum_Rate {80} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {23} \
   CONFIG.Quantization {Truncation} \
   CONFIG.SamplePeriod {80} \
   CONFIG.Sample_Rate_Changes {Programmable} \
 ] $cic_compiler_1

  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [ list \
   CONFIG.APortWidth {23} \
   CONFIG.BPortWidth {16} \
   CONFIG.FlowControl {NonBlocking} \
   CONFIG.MinimumLatency {6} \
   CONFIG.OutputWidth {20} \
   CONFIG.RoundMode {Truncate} \
 ] $cmpy_0

  # Create instance: cordic_0, and set properties
  set cordic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cordic:6.0 cordic_0 ]
  set_property -dict [ list \
   CONFIG.Compensation_Scaling {No_Scale_Compensation} \
   CONFIG.Data_Format {SignedFraction} \
   CONFIG.Functional_Selection {Translate} \
   CONFIG.Input_Width {23} \
   CONFIG.Output_Width {16} \
   CONFIG.flow_control {NonBlocking} \
 ] $cordic_0

  # Create instance: cvt_offset_binary_0, and set properties
  set block_name cvt_offset_binary
  set block_cell_name cvt_offset_binary_0
  if { [catch {set cvt_offset_binary_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cvt_offset_binary_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: dds_compiler_txfreq, and set properties
  set dds_compiler_txfreq [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_txfreq ]
  set_property -dict [ list \
   CONFIG.Amplitude_Mode {Full_Range} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {122.88} \
   CONFIG.DSP48_Use {Minimal} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Latency {8} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {29} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {96} \
 ] $dds_compiler_txfreq

  # Create instance: fir_compiler_0, and set properties
  set fir_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 fir_compiler_0 ]
  set_property -dict [ list \
   CONFIG.BestPrecision {true} \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.CoefficientSource {COE_File} \
   CONFIG.Coefficient_File {../../../../../../../sources/coefficientfiles/512TapLPF_corner_20KHz_tfilter.coe} \
   CONFIG.Coefficient_Fractional_Bits {24} \
   CONFIG.Coefficient_Sets {1} \
   CONFIG.Coefficient_Sign {Signed} \
   CONFIG.Coefficient_Structure {Inferred} \
   CONFIG.Coefficient_Width {22} \
   CONFIG.ColumnConfig {1} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.Data_Width {16} \
   CONFIG.Decimation_Rate {1} \
   CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
   CONFIG.Filter_Type {Interpolation} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Interpolation_Rate {8} \
   CONFIG.M_DATA_Has_TREADY {true} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Number_Channels {2} \
   CONFIG.Output_Rounding_Mode {Symmetric_Rounding_to_Zero} \
   CONFIG.Output_Width {20} \
   CONFIG.Quantization {Quantize_Only} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.S_DATA_Has_TUSER {Not_Required} \
   CONFIG.Sample_Frequency {0.192} \
   CONFIG.Select_Pattern {All} \
   CONFIG.Zero_Pack_Factor {1} \
 ] $fir_compiler_0

  # Create instance: mult_gen_0, and set properties
  set mult_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mult_gen:12.0 mult_gen_0 ]
  set_property -dict [ list \
   CONFIG.MultType {Parallel_Multiplier} \
   CONFIG.Multiplier_Construction {Use_Mults} \
   CONFIG.OptGoal {Speed} \
   CONFIG.OutputWidthHigh {31} \
   CONFIG.OutputWidthLow {16} \
   CONFIG.PipeStages {4} \
   CONFIG.PortAWidth {20} \
   CONFIG.PortBType {Unsigned} \
   CONFIG.Use_Custom_Output_Width {true} \
 ] $mult_gen_0

  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {16} \
 ] $regmux_2_1_0

  # Create instance: regmux_2_1_1, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_1
  if { [catch {set regmux_2_1_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create instance: xlconstant_16x0, and set properties
  set xlconstant_16x0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_16x0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_16x0

  # Create instance: xlconstant_proto1, and set properties
  set xlconstant_proto1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_proto1 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {320} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_proto1

  # Create instance: xlconstant_proto2, and set properties
  set xlconstant_proto2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_proto2 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {80} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_proto2

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DOUT_WIDTH {4} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {48} \
   CONFIG.DOUT_WIDTH {20} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {18} \
 ] $xlslice_3

  # Create instance: xlslice_rate, and set properties
  set xlslice_rate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_rate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_rate

  # Create interface connections
  connect_bd_intf_net -intf_net IQ_Modulation_Select_output_axis [get_bd_intf_pins IQ_Modulation_Select/output_axis] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net TX_IQ_In_1 [get_bd_intf_pins TX_IQ_In] [get_bd_intf_pins IQ_Modulation_Select/TX_IQ_in]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/M00_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS1 [get_bd_intf_pins TX_DDS_IQ] [get_bd_intf_pins axis_broadcaster_0/M00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/M01_AXIS] [get_bd_intf_pins cic_compiler_1/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS1 [get_bd_intf_pins axis_broadcaster_0/M01_AXIS] [get_bd_intf_pins cmpy_0/S_AXIS_B]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_broadcaster_1/M00_AXIS] [get_bd_intf_pins cordic_0/S_AXIS_CARTESIAN]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_broadcaster_1/M01_AXIS] [get_bd_intf_pins cmpy_0/S_AXIS_A]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_broadcaster_1/S_AXIS] [get_bd_intf_pins axis_combiner_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_constant_0_m_axis [get_bd_intf_pins axis_constant_0/m_axis] [get_bd_intf_pins dds_compiler_txfreq/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS] [get_bd_intf_pins fir_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_dwidth_converter_fir_to_IQ_M_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/S_AXIS] [get_bd_intf_pins axis_dwidth_converter_fir_to_IQ/M_AXIS]
  connect_bd_intf_net -intf_net axis_variable_0_m_axis [get_bd_intf_pins axis_variable_0/m_axis] [get_bd_intf_pins cic_compiler_0/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net axis_variable_1_m_axis [get_bd_intf_pins axis_variable_1/m_axis] [get_bd_intf_pins cic_compiler_1/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net cic_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_combiner_0/S00_AXIS] [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net cic_compiler_1_M_AXIS_DATA [get_bd_intf_pins axis_combiner_0/S01_AXIS] [get_bd_intf_pins cic_compiler_1/M_AXIS_DATA]
  connect_bd_intf_net -intf_net dds_compiler_txfreq_M_AXIS_DATA [get_bd_intf_pins axis_broadcaster_0/S_AXIS] [get_bd_intf_pins dds_compiler_txfreq/M_AXIS_DATA]
  connect_bd_intf_net -intf_net fir_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_dwidth_converter_fir_to_IQ/S_AXIS] [get_bd_intf_pins fir_compiler_0/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net D_register_1_dout [get_bd_pins TXMagnitude] [get_bd_pins D_register_1/dout]
  connect_bd_net -net D_register_2_dout [get_bd_pins TXSamplesToRX] [get_bd_pins D_register_2/dout]
  connect_bd_net -net Net5 [get_bd_pins clk2] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins IQ_Modulation_Select/clk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_broadcaster_cic_path_split/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_constant_0/aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_dwidth_converter_fir_to_IQ/aclk] [get_bd_pins axis_variable_0/aclk] [get_bd_pins axis_variable_1/aclk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins cic_compiler_1/aclk] [get_bd_pins cmpy_0/aclk] [get_bd_pins cordic_0/aclk] [get_bd_pins cvt_offset_binary_0/clk] [get_bd_pins dds_compiler_txfreq/aclk] [get_bd_pins fir_compiler_0/aclk] [get_bd_pins mult_gen_0/CLK] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins regmux_2_1_1/aclk]
  connect_bd_net -net TXConfig_1 [get_bd_pins TXConfig] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_rate/Din]
  connect_bd_net -net TXStrobe_1 [get_bd_pins TXStrobe] [get_bd_pins IQ_Modulation_Select/TX_Strobe]
  connect_bd_net -net TX_LO_Tune_1 [get_bd_pins TXLOTune] [get_bd_pins axis_constant_0/cfg_data]
  connect_bd_net -net TX_Test_Freq_1 [get_bd_pins TXTestFreq] [get_bd_pins IQ_Modulation_Select/TXTestFreq]
  connect_bd_net -net cmpy_0_m_axis_dout_tdata [get_bd_pins cmpy_0/m_axis_dout_tdata] [get_bd_pins xlslice_2/Din]
  connect_bd_net -net cordic_0_m_axis_dout_tdata [get_bd_pins cordic_0/m_axis_dout_tdata] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net cvt_offset_binary_0_dout [get_bd_pins TXDACData] [get_bd_pins cvt_offset_binary_0/dout]
  connect_bd_net -net cw_key_down_1 [get_bd_pins cw_key_down] [get_bd_pins IQ_Modulation_Select/cw_key_down]
  connect_bd_net -net cw_key_ramp_0_CW_PTT1 [get_bd_pins cw_ptt1] [get_bd_pins IQ_Modulation_Select/cw_ptt]
  connect_bd_net -net keyer_config_1 [get_bd_pins keyer_config] [get_bd_pins IQ_Modulation_Select/keyer_config]
  connect_bd_net -net mult_gen_0_P [get_bd_pins D_register_2/din] [get_bd_pins mult_gen_0/P] [get_bd_pins regmux_2_1_0/din1]
  connect_bd_net -net regmux_2_1_0_dout [get_bd_pins cvt_offset_binary_0/din] [get_bd_pins regmux_2_1_0/dout]
  connect_bd_net -net regmux_2_1_1_dout1 [get_bd_pins axis_variable_0/cfg_data] [get_bd_pins axis_variable_1/cfg_data] [get_bd_pins regmux_2_1_1/dout]
  connect_bd_net -net resetn_2 [get_bd_pins resetn1] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins IQ_Modulation_Select/resetn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_broadcaster_cic_path_split/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_dwidth_converter_fir_to_IQ/aresetn] [get_bd_pins axis_variable_0/aresetn] [get_bd_pins axis_variable_1/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins cic_compiler_1/aresetn] [get_bd_pins fir_compiler_0/aresetn] [get_bd_pins regmux_2_1_0/resetn] [get_bd_pins regmux_2_1_1/resetn]
  connect_bd_net -net util_reduced_logic_0_Res1 [get_bd_pins CWSampleSelect] [get_bd_pins IQ_Modulation_Select/CWSampleSelect]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins IQ_Modulation_Select/Res] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins DAC_SPI_CK] [get_bd_pins DAC_SPI_MOSI] [get_bd_pins DAC_SPI_SSn] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_16x0_dout [get_bd_pins regmux_2_1_0/din0] [get_bd_pins xlconstant_16x0/dout]
  connect_bd_net -net xlconstant_proto1_dout [get_bd_pins regmux_2_1_1/din0] [get_bd_pins xlconstant_proto1/dout]
  connect_bd_net -net xlconstant_proto2_dout [get_bd_pins regmux_2_1_1/din1] [get_bd_pins xlconstant_proto2/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins IQ_Modulation_Select/TXConfig] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout1 [get_bd_pins D_register_1/din] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins mult_gen_0/A] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins mult_gen_0/B] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_rate_Dout [get_bd_pins IQ_Modulation_Select/protocol_2] [get_bd_pins regmux_2_1_1/sel] [get_bd_pins xlslice_rate/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Receiver
proc create_hier_cell_Receiver { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_Receiver() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TXDDSIn
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 ddc_iqstream

  # Create pins
  create_bd_pin -dir I ADC1_Overrange
  create_bd_pin -dir I ADC2_Overrange
  create_bd_pin -dir O -from 1 -to 0 ADC_Overrange
  create_bd_pin -dir I -from 1 -to 0 ADC_Randomise
  create_bd_pin -dir I -from 31 -to 0 ChanFreq
  create_bd_pin -dir I -from 31 -to 0 ChanFreq2
  create_bd_pin -dir I -from 31 -to 0 ChanFreq3
  create_bd_pin -dir I -from 31 -to 0 ChanFreq4
  create_bd_pin -dir I -from 31 -to 0 RXConfig
  create_bd_pin -dir I TX_Strb
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -from 15 -to 0 adc1
  create_bd_pin -dir I -from 15 -to 0 adc2
  create_bd_pin -dir I clock_122_delayed
  create_bd_pin -dir I -type rst rstn1
  create_bd_pin -dir I -from 15 -to 0 tx_samples

  # Create instance: Double_D_register_0, and set properties
  set block_name Double_D_register
  set block_cell_name Double_D_register_0
  if { [catch {set Double_D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Double_D_register_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {9} \
 ] $Double_D_register_0

  # Create instance: LTC2208_derandomise_0, and set properties
  set block_name LTC2208_derandomise
  set block_cell_name LTC2208_derandomise_0
  if { [catch {set LTC2208_derandomise_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LTC2208_derandomise_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: LTC2208_derandomise_1, and set properties
  set block_name LTC2208_derandomise
  set block_cell_name LTC2208_derandomise_1
  if { [catch {set LTC2208_derandomise_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LTC2208_derandomise_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Receiver_Slice_1
  create_hier_cell_Receiver_Slice_1 $hier_obj Receiver_Slice_1

  # Create instance: Receiver_Slice_2
  create_hier_cell_Receiver_Slice_2 $hier_obj Receiver_Slice_2

  # Create instance: Receiver_Slice_3
  create_hier_cell_Receiver_Slice_3 $hier_obj Receiver_Slice_3

  # Create instance: Receiver_Slice_4
  create_hier_cell_Receiver_Slice_4 $hier_obj Receiver_Slice_4

  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TREADY {0} \
   CONFIG.M00_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M02_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M03_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.NUM_MI {4} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_broadcaster_0

  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]
  set_property -dict [ list \
   CONFIG.NUM_SI {8} \
 ] $axis_combiner_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {3} \
   CONFIG.S_TDATA_NUM_BYTES {24} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_dwidth_converter_1, and set properties
  set axis_dwidth_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_1 ]
  set_property -dict [ list \
   CONFIG.HAS_MI_TKEEP {0} \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_dwidth_converter_1

  # Create instance: axis_subset_converter_0, and set properties
  set axis_subset_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
   CONFIG.TDATA_REMAP {tdata[55],tdata[55],tdata[55],tdata[55],tdata[55],tdata[55],tdata[55],tdata[55],tdata[55:32],tdata[23],tdata[23],tdata[23],tdata[23],tdata[23],tdata[23],tdata[23],tdata[23],tdata[23:0]} \
 ] $axis_subset_converter_0

  # Create instance: fir_compiler_0, and set properties
  set fir_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 fir_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {122.88} \
   CONFIG.CoefficientSource {COE_File} \
   CONFIG.CoefficientVector {6,0,-4,-3,5,6,-6,-13,7,44,64,44,7,-13,-6,6,5,-3,-4,0,6} \
   CONFIG.Coefficient_File {../../../../../../../sources/coefficientfiles/512 tap TX filter_tfilter.coe} \
   CONFIG.Coefficient_Fractional_Bits {24} \
   CONFIG.Coefficient_Sets {1} \
   CONFIG.Coefficient_Sign {Signed} \
   CONFIG.Coefficient_Structure {Inferred} \
   CONFIG.Coefficient_Width {22} \
   CONFIG.ColumnConfig {7} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.Data_Fractional_Bits {0} \
   CONFIG.Data_Width {24} \
   CONFIG.Decimation_Rate {8} \
   CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Interpolation_Rate {1} \
   CONFIG.M_DATA_Has_TREADY {true} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Number_Channels {2} \
   CONFIG.Optimization_Goal {Speed} \
   CONFIG.Optimization_List {Data_Path_Fanout,Pre-Adder_Pipeline,Coefficient_Fanout,Control_Path_Fanout,Control_Column_Fanout,Control_Broadcast_Fanout,Control_LUT_Pipeline,No_BRAM_Read_First_Mode,Optimal_Column_Lengths,Other} \
   CONFIG.Optimization_Selection {All} \
   CONFIG.Output_Rounding_Mode {Truncate_LSBs} \
   CONFIG.Output_Width {28} \
   CONFIG.Quantization {Quantize_Only} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.S_DATA_Has_TUSER {Not_Required} \
   CONFIG.Sample_Frequency {12.288} \
   CONFIG.Select_Pattern {All} \
   CONFIG.Zero_Pack_Factor {1} \
 ] $fir_compiler_0

  # Create instance: overrange_latch_0, and set properties
  set block_name overrange_latch
  set block_cell_name overrange_latch_0
  if { [catch {set overrange_latch_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $overrange_latch_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: overrange_latch_1, and set properties
  set block_name overrange_latch
  set block_cell_name overrange_latch_1
  if { [catch {set overrange_latch_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $overrange_latch_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: regmux_8_1_0, and set properties
  set block_name regmux_8_1
  set block_cell_name regmux_8_1_0
  if { [catch {set regmux_8_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_8_1_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {9} \
 ] $regmux_8_1_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]

  # Create instance: xlconstant_10, and set properties
  set xlconstant_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_10 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {10} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_10

  # Create instance: xlconstant_20, and set properties
  set xlconstant_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_20 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {20} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_20

  # Create instance: xlconstant_40, and set properties
  set xlconstant_40 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_40 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {40} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_40

  # Create instance: xlconstant_80, and set properties
  set xlconstant_80 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_80 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {80} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_80

  # Create instance: xlconstant_160, and set properties
  set xlconstant_160 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_160 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {160} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_160

  # Create instance: xlconstant_320, and set properties
  set xlconstant_320 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_320 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {320} \
   CONFIG.CONST_WIDTH {9} \
 ] $xlconstant_320

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {2} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_ch1config, and set properties
  set xlslice_ch1config [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_ch1config ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DOUT_WIDTH {4} \
 ] $xlslice_ch1config

  # Create instance: xlslice_cicrate, and set properties
  set xlslice_cicrate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_cicrate ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {3} \
 ] $xlslice_cicrate

  # Create interface connections
  connect_bd_intf_net -intf_net Receiver_Slice_2_M_AXIS_DATA [get_bd_intf_pins Receiver_Slice_2/M_AXIS_DATA] [get_bd_intf_pins axis_combiner_0/S02_AXIS]
  connect_bd_intf_net -intf_net Receiver_Slice_2_M_AXIS_DATA1 [get_bd_intf_pins Receiver_Slice_2/M_AXIS_DATA1] [get_bd_intf_pins axis_combiner_0/S03_AXIS]
  connect_bd_intf_net -intf_net Receiver_Slice_3_M_AXIS_DATA [get_bd_intf_pins Receiver_Slice_3/M_AXIS_DATA] [get_bd_intf_pins axis_combiner_0/S04_AXIS]
  connect_bd_intf_net -intf_net Receiver_Slice_3_M_AXIS_DATA1 [get_bd_intf_pins Receiver_Slice_3/M_AXIS_DATA1] [get_bd_intf_pins axis_combiner_0/S05_AXIS]
  connect_bd_intf_net -intf_net Receiver_Slice_4_M_AXIS_DATA [get_bd_intf_pins Receiver_Slice_4/M_AXIS_DATA] [get_bd_intf_pins axis_combiner_0/S06_AXIS]
  connect_bd_intf_net -intf_net Receiver_Slice_4_M_AXIS_DATA1 [get_bd_intf_pins Receiver_Slice_4/M_AXIS_DATA1] [get_bd_intf_pins axis_combiner_0/S07_AXIS]
  connect_bd_intf_net -intf_net RxChannel1_M_AXIS_IDATA [get_bd_intf_pins Receiver_Slice_1/M_AXIS_DATA] [get_bd_intf_pins axis_combiner_0/S00_AXIS]
  connect_bd_intf_net -intf_net RxChannel1_M_AXIS_QDATA [get_bd_intf_pins Receiver_Slice_1/M_AXIS_DATA1] [get_bd_intf_pins axis_combiner_0/S01_AXIS]
  connect_bd_intf_net -intf_net TXDDSIn_1 [get_bd_intf_pins TXDDSIn] [get_bd_intf_pins axis_broadcaster_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins Receiver_Slice_1/TXDDSData] [get_bd_intf_pins axis_broadcaster_0/M00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins Receiver_Slice_2/TXDDSData] [get_bd_intf_pins axis_broadcaster_0/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M02_AXIS [get_bd_intf_pins Receiver_Slice_3/TXDDSData] [get_bd_intf_pins axis_broadcaster_0/M02_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M03_AXIS [get_bd_intf_pins Receiver_Slice_4/TXDDSData] [get_bd_intf_pins axis_broadcaster_0/M03_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_combiner_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS] [get_bd_intf_pins fir_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_dwidth_converter_1_M_AXIS [get_bd_intf_pins axis_dwidth_converter_1/M_AXIS] [get_bd_intf_pins axis_subset_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_0_M_AXIS1 [get_bd_intf_pins ddc_iqstream] [get_bd_intf_pins axis_subset_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fir_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_dwidth_converter_1/S_AXIS] [get_bd_intf_pins fir_compiler_0/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net ADC1_Overrange_1 [get_bd_pins ADC1_Overrange] [get_bd_pins overrange_latch_1/overrange]
  connect_bd_net -net ADC2_Overrange_1 [get_bd_pins ADC2_Overrange] [get_bd_pins overrange_latch_0/overrange]
  connect_bd_net -net ARC_Randomise_1 [get_bd_pins ADC_Randomise] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net ChanFreq2_1 [get_bd_pins ChanFreq2] [get_bd_pins Receiver_Slice_2/ChanFreq]
  connect_bd_net -net ChanFreq3_1 [get_bd_pins ChanFreq3] [get_bd_pins Receiver_Slice_3/ChanFreq]
  connect_bd_net -net ChanFreq4_1 [get_bd_pins ChanFreq4] [get_bd_pins Receiver_Slice_4/ChanFreq]
  connect_bd_net -net ChanFreq_1 [get_bd_pins ChanFreq] [get_bd_pins Receiver_Slice_1/ChanFreq]
  connect_bd_net -net Double_D_register_0_dout [get_bd_pins Double_D_register_0/dout] [get_bd_pins Receiver_Slice_1/CicRate] [get_bd_pins Receiver_Slice_2/CicRate] [get_bd_pins Receiver_Slice_3/CicRate] [get_bd_pins Receiver_Slice_4/CicRate]
  connect_bd_net -net LTC2208_derandomise_0_dout [get_bd_pins LTC2208_derandomise_0/dout] [get_bd_pins Receiver_Slice_1/adc1] [get_bd_pins Receiver_Slice_2/adc1] [get_bd_pins Receiver_Slice_3/adc1] [get_bd_pins Receiver_Slice_4/adc1]
  connect_bd_net -net LTC2208_derandomise_1_dout [get_bd_pins LTC2208_derandomise_1/dout] [get_bd_pins Receiver_Slice_1/adc2] [get_bd_pins Receiver_Slice_2/adc2] [get_bd_pins Receiver_Slice_3/adc2] [get_bd_pins Receiver_Slice_4/adc2]
  connect_bd_net -net Net [get_bd_pins clock_122_delayed] [get_bd_pins LTC2208_derandomise_0/clk] [get_bd_pins LTC2208_derandomise_1/clk]
  connect_bd_net -net RXConfig_1 [get_bd_pins RXConfig] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_ch1config/Din] [get_bd_pins xlslice_cicrate/Din]
  connect_bd_net -net TX_Strb_1 [get_bd_pins TX_Strb] [get_bd_pins Receiver_Slice_1/TX_Strb] [get_bd_pins Receiver_Slice_2/TX_Strb] [get_bd_pins Receiver_Slice_3/TX_Strb] [get_bd_pins Receiver_Slice_4/TX_Strb]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins Double_D_register_0/aclk] [get_bd_pins Receiver_Slice_1/aclk] [get_bd_pins Receiver_Slice_2/aclk] [get_bd_pins Receiver_Slice_3/aclk] [get_bd_pins Receiver_Slice_4/aclk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_dwidth_converter_1/aclk] [get_bd_pins axis_subset_converter_0/aclk] [get_bd_pins fir_compiler_0/aclk] [get_bd_pins overrange_latch_0/aclk] [get_bd_pins overrange_latch_1/aclk] [get_bd_pins regmux_8_1_0/aclk]
  connect_bd_net -net adc1_1 [get_bd_pins adc1] [get_bd_pins LTC2208_derandomise_0/din]
  connect_bd_net -net adc2_1 [get_bd_pins adc2] [get_bd_pins LTC2208_derandomise_1/din]
  connect_bd_net -net overrange_latch_0_overrange_latched [get_bd_pins overrange_latch_0/overrange_latched] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net overrange_latch_1_overrange_latched [get_bd_pins overrange_latch_1/overrange_latched] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net regmux_8_1_0_dout [get_bd_pins Double_D_register_0/din] [get_bd_pins regmux_8_1_0/dout]
  connect_bd_net -net rstn_2 [get_bd_pins rstn1] [get_bd_pins Receiver_Slice_1/rstn] [get_bd_pins Receiver_Slice_2/rstn] [get_bd_pins Receiver_Slice_3/rstn] [get_bd_pins Receiver_Slice_4/rstn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_dwidth_converter_1/aresetn] [get_bd_pins axis_subset_converter_0/aresetn] [get_bd_pins fir_compiler_0/aresetn] [get_bd_pins overrange_latch_0/arstn] [get_bd_pins overrange_latch_1/arstn] [get_bd_pins regmux_8_1_0/resetn]
  create_bd_net test_source_1
  connect_bd_net -net [get_bd_nets test_source_1] [get_bd_pins Receiver_Slice_1/test_source] [get_bd_pins Receiver_Slice_2/test_source] [get_bd_pins Receiver_Slice_3/test_source] [get_bd_pins Receiver_Slice_4/test_source] [get_bd_pins Receiver_Slice_4/testsource]
  connect_bd_net -net tx_samples_1 [get_bd_pins tx_samples] [get_bd_pins Receiver_Slice_1/tx_samples] [get_bd_pins Receiver_Slice_2/tx_samples] [get_bd_pins Receiver_Slice_3/tx_samples] [get_bd_pins Receiver_Slice_4/tx_samples]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins ADC_Overrange] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconstant_10_dout [get_bd_pins regmux_8_1_0/din5] [get_bd_pins regmux_8_1_0/din6] [get_bd_pins regmux_8_1_0/din7] [get_bd_pins xlconstant_10/dout]
  connect_bd_net -net xlconstant_160_dout [get_bd_pins regmux_8_1_0/din1] [get_bd_pins xlconstant_160/dout]
  connect_bd_net -net xlconstant_20_dout [get_bd_pins regmux_8_1_0/din4] [get_bd_pins xlconstant_20/dout]
  connect_bd_net -net xlconstant_320_dout [get_bd_pins regmux_8_1_0/din0] [get_bd_pins xlconstant_320/dout]
  connect_bd_net -net xlconstant_40_dout [get_bd_pins regmux_8_1_0/din3] [get_bd_pins xlconstant_40/dout]
  connect_bd_net -net xlconstant_80_dout [get_bd_pins regmux_8_1_0/din2] [get_bd_pins xlconstant_80/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins LTC2208_derandomise_0/rand_sel] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins LTC2208_derandomise_1/rand_sel] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins overrange_latch_1/clear] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins overrange_latch_0/clear] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_ch1config_Dout [get_bd_pins Receiver_Slice_1/ChanConfig] [get_bd_pins Receiver_Slice_2/ChanConfig] [get_bd_pins Receiver_Slice_3/ChanConfig] [get_bd_pins Receiver_Slice_4/ChanConfig] [get_bd_pins xlslice_ch1config/Dout]
  connect_bd_net -net xlslice_cicrate_Dout [get_bd_pins regmux_8_1_0/sel] [get_bd_pins xlslice_cicrate/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: RF_interfaces
proc create_hier_cell_RF_interfaces { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_RF_interfaces() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -type clk ADC1_ATTEN_CLK
  create_bd_pin -dir O ADC1_ATTEN_DAT
  create_bd_pin -dir O ADC1_ATTEN_LE
  create_bd_pin -dir O -type clk ADC2_ATTEN_CLK
  create_bd_pin -dir O ADC2_ATTEN_DAT
  create_bd_pin -dir O ADC2_ATTEN_LE
  create_bd_pin -dir I -from 31 -to 0 ADC_Ctrl
  create_bd_pin -dir O -from 1 -to 0 ADC_Randomise
  create_bd_pin -dir O -from 0 -to 0 ATU_TUNE
  create_bd_pin -dir O -from 0 -to 0 BIAS_CTRL
  create_bd_pin -dir O -from 0 -to 0 CLASS_E_SEL
  create_bd_pin -dir O CTRL_TRSW
  create_bd_pin -dir O CW_Key_Down
  create_bd_pin -dir I -from 31 -to 0 DAC_Ctrl
  create_bd_pin -dir O -from 5 -to 0 Dac_Atten
  create_bd_pin -dir O -from 23 -to 0 GPIO_OUT
  create_bd_pin -dir O -from 0 -to 0 MOX_strobe
  create_bd_pin -dir O -from 0 -to 0 PURESIGNAL_ENABLE
  create_bd_pin -dir I -from 31 -to 0 RF_GPIO
  create_bd_pin -dir O -type clk RF_SPI_CK
  create_bd_pin -dir O RF_SPI_DATA
  create_bd_pin -dir O RF_SPI_RX_LOAD
  create_bd_pin -dir O RF_SPI_TX_LOAD
  create_bd_pin -dir I -from 31 -to 0 RX_SPI
  create_bd_pin -dir O TXRX_RELAY
  create_bd_pin -dir O TX_DAC_PWM
  create_bd_pin -dir I -from 15 -to 0 TX_SPI
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I -from 0 -to 0 keyer_PTT
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 9 -to 0 status_in
  create_bd_pin -dir O -from 9 -to 0 status_out

  # Create instance: AttenDrivers
  create_hier_cell_AttenDrivers $hier_obj AttenDrivers

  # Create instance: RF_SPI_Shift
  create_hier_cell_RF_SPI_Shift $hier_obj RF_SPI_Shift

  # Create instance: Strobes
  create_hier_cell_Strobes $hier_obj Strobes

  # Create instance: debounce
  create_hier_cell_debounce $hier_obj debounce

  # Create port connections
  connect_bd_net -net Net [get_bd_pins ADC_Ctrl] [get_bd_pins AttenDrivers/ADC_Ctrl]
  connect_bd_net -net Net1 [get_bd_pins DAC_Ctrl] [get_bd_pins AttenDrivers/DAC_Ctrl]
  connect_bd_net -net Net2 [get_bd_pins TX_SPI] [get_bd_pins RF_SPI_Shift/TX_SPI]
  connect_bd_net -net PWM_DAC_0_DAC_bit [get_bd_pins TX_DAC_PWM] [get_bd_pins AttenDrivers/TX_DAC_PWM]
  connect_bd_net -net RF_GPIO_1 [get_bd_pins RF_GPIO] [get_bd_pins Strobes/RF_GPIO]
  connect_bd_net -net RX_SPI_1 [get_bd_pins RX_SPI] [get_bd_pins RF_SPI_Shift/RX_SPI]
  connect_bd_net -net SPI_0_Rx_load_strobe [get_bd_pins RF_SPI_RX_LOAD] [get_bd_pins RF_SPI_Shift/RF_SPI_RX_LOAD]
  connect_bd_net -net SPI_0_SPI_clock [get_bd_pins RF_SPI_CK] [get_bd_pins RF_SPI_Shift/RF_SPI_CK]
  connect_bd_net -net SPI_0_SPI_data [get_bd_pins RF_SPI_DATA] [get_bd_pins RF_SPI_Shift/RF_SPI_DATA]
  connect_bd_net -net SPI_0_Tx_load_strobe [get_bd_pins RF_SPI_TX_LOAD] [get_bd_pins RF_SPI_Shift/RF_SPI_TX_LOAD]
  connect_bd_net -net SerialAtten_0_ATTN_CLK [get_bd_pins ADC1_ATTEN_CLK] [get_bd_pins AttenDrivers/ADC1_ATTEN_CLK]
  connect_bd_net -net SerialAtten_0_ATTN_DATA [get_bd_pins ADC1_ATTEN_DAT] [get_bd_pins AttenDrivers/ADC1_ATTEN_DAT]
  connect_bd_net -net SerialAtten_0_ATTN_LE [get_bd_pins ADC1_ATTEN_LE] [get_bd_pins AttenDrivers/ADC1_ATTEN_LE]
  connect_bd_net -net SerialAtten_1_ATTN_CLK [get_bd_pins ADC2_ATTEN_CLK] [get_bd_pins AttenDrivers/ADC2_ATTEN_CLK]
  connect_bd_net -net SerialAtten_1_ATTN_DATA [get_bd_pins ADC2_ATTEN_DAT] [get_bd_pins AttenDrivers/ADC2_ATTEN_DAT]
  connect_bd_net -net SerialAtten_1_ATTN_LE [get_bd_pins ADC2_ATTEN_LE] [get_bd_pins AttenDrivers/ADC2_ATTEN_LE]
  connect_bd_net -net Strobes_ADC_Randomise [get_bd_pins ADC_Randomise] [get_bd_pins Strobes/ADC_Randomise]
  connect_bd_net -net clk_1 [get_bd_pins clk] [get_bd_pins AttenDrivers/clk] [get_bd_pins RF_SPI_Shift/clk] [get_bd_pins debounce/clk]
  connect_bd_net -net debounce_CW_Key_Down [get_bd_pins CW_Key_Down] [get_bd_pins debounce/CW_Key_Down]
  connect_bd_net -net debounce_status_out [get_bd_pins status_out] [get_bd_pins debounce/status_out]
  connect_bd_net -net keyer_PTT_1 [get_bd_pins keyer_PTT] [get_bd_pins Strobes/keyer_PTT]
  connect_bd_net -net regmux_2_1_1_dout [get_bd_pins Dac_Atten] [get_bd_pins AttenDrivers/Dac_Atten]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins AttenDrivers/rstn] [get_bd_pins RF_SPI_Shift/rstn] [get_bd_pins debounce/rstn]
  connect_bd_net -net status_in_1 [get_bd_pins status_in] [get_bd_pins debounce/status_in]
  connect_bd_net -net util_reduced_logic_1_Res [get_bd_pins MOX_strobe] [get_bd_pins AttenDrivers/tx_strobe] [get_bd_pins RF_SPI_Shift/tx_strobe] [get_bd_pins Strobes/MOX_strobe]
  connect_bd_net -net util_reduced_logic_2_Res [get_bd_pins CTRL_TRSW] [get_bd_pins Strobes/CTRL_TRSW]
  connect_bd_net -net util_reduced_logic_3_Res [get_bd_pins TXRX_RELAY] [get_bd_pins Strobes/TXRX_RELAY]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins BIAS_CTRL] [get_bd_pins Strobes/BIAS_CTRL]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins GPIO_OUT] [get_bd_pins Strobes/GPIO_OUT]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins CLASS_E_SEL] [get_bd_pins Strobes/CLASS_E_SEL]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins ATU_TUNE] [get_bd_pins Strobes/ATU_TUNE]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins PURESIGNAL_ENABLE] [get_bd_pins Strobes/PURESIGNAL_ENABLE]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: PCIe
proc create_hier_cell_PCIe { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_PCIe() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 Codec_Mic_Stream
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 Codec_Spkr_Data
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 RX_Data
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 TX_Data
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 diff_clock_rtl_0
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_7x_mgt_rtl_0

  # Create pins
  create_bd_pin -dir O -from 31 -to 0 ADCCtrlData
  create_bd_pin -dir I -from 1 -to 0 ADC_Overrange
  create_bd_pin -dir O -from 31 -to 0 CodecConfigData
  create_bd_pin -dir O -from 31 -to 0 DACCtrlData
  create_bd_pin -dir O -from 31 -to 0 KeyerConfigData
  create_bd_pin -dir O -from 15 -to 0 LEDDrivers
  create_bd_pin -dir O -from 31 -to 0 RFGPIOData
  create_bd_pin -dir O -from 31 -to 0 RXConfigData
  create_bd_pin -dir O -from 31 -to 0 RXFreq1Data
  create_bd_pin -dir O -from 31 -to 0 RXFreq2Data
  create_bd_pin -dir O -from 31 -to 0 RXFreq3Data
  create_bd_pin -dir O -from 31 -to 0 RXFreq4Data
  create_bd_pin -dir O -from 31 -to 0 RXSPIData
  create_bd_pin -dir I SPI_MISO
  create_bd_pin -dir O SPI_MOSI
  create_bd_pin -dir O -from 0 -to 0 SPI_SSn
  create_bd_pin -dir I -from 9 -to 0 Status_data
  create_bd_pin -dir O -from 31 -to 0 TXConfigData
  create_bd_pin -dir O -from 31 -to 0 TXFreqData
  create_bd_pin -dir O -from 15 -to 0 TXSPIData
  create_bd_pin -dir O -from 31 -to 0 TXTestFreqData
  create_bd_pin -dir O -from 4 -to 0 axi_resetn
  create_bd_pin -dir I ck_12
  create_bd_pin -dir I ck_122
  create_bd_pin -dir I clk_122
  create_bd_pin -dir I -type rst reset_rtl_0

  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {5} \
 ] $D_register_0

  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {1} \
 ] $D_register_1

  # Create instance: Double_D_register_0, and set properties
  set block_name Double_D_register
  set block_cell_name Double_D_register_0
  if { [catch {set Double_D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Double_D_register_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {1} \
 ] $Double_D_register_0

  # Create instance: Usr_Reg_Access_0, and set properties
  set block_name Usr_Reg_Access
  set block_cell_name Usr_Reg_Access_0
  if { [catch {set Usr_Reg_Access_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Usr_Reg_Access_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_cfg_register_0, and set properties
  set block_name axi_cfg_register
  set block_cell_name axi_cfg_register_0
  if { [catch {set axi_cfg_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_cfg_register_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_DATA_WIDTH {512} \
 ] $axi_cfg_register_0

  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_0

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.ENABLE_ADVANCED_OPTIONS {0} \
   CONFIG.NUM_MI {3} \
 ] $axi_interconnect_0

  # Create instance: axi_quad_spi_0, and set properties
  set axi_quad_spi_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0 ]
  set_property -dict [ list \
   CONFIG.C_SCK_RATIO {8} \
   CONFIG.C_SHARED_STARTUP {0} \
   CONFIG.C_SPI_MEMORY {1} \
   CONFIG.C_SPI_MEM_ADDR_BITS {24} \
   CONFIG.C_TYPE_OF_AXI4_INTERFACE {0} \
   CONFIG.C_USE_STARTUP {1} \
   CONFIG.C_USE_STARTUP_INT {1} \
   CONFIG.C_XIP_MODE {0} \
 ] $axi_quad_spi_0

  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_0 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {512} \
   CONFIG.HAS_PROG_FULL {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.PROG_FULL_THRESH {256} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_0

  # Create instance: axis_data_fifo_1, and set properties
  set axis_data_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_1 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {4096} \
   CONFIG.HAS_PROG_FULL {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.PROG_FULL_THRESH {2048} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_1

  # Create instance: axis_data_fifo_2, and set properties
  set axis_data_fifo_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_2 ]
  set_property -dict [ list \
   CONFIG.HAS_PROG_EMPTY {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.PROG_EMPTY_THRESH {256} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_2

  # Create instance: axis_data_fifo_3, and set properties
  set axis_data_fifo_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_3 ]
  set_property -dict [ list \
   CONFIG.HAS_PROG_EMPTY {1} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.PROG_EMPTY_THRESH {256} \
   CONFIG.TDATA_NUM_BYTES {8} \
 ] $axis_data_fifo_3

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_dwidth_converter_2, and set properties
  set axis_dwidth_converter_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_2 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
 ] $axis_dwidth_converter_2

  # Create instance: axis_dwidth_converter_3, and set properties
  set axis_dwidth_converter_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_3 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
 ] $axis_dwidth_converter_3

  # Create instance: pci_clk_buf, and set properties
  set pci_clk_buf [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 pci_clk_buf ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
 ] $pci_clk_buf

  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0 ]
  set_property -dict [ list \
   CONFIG.PF0_DEVICE_ID_mqdma {9014} \
   CONFIG.PF2_DEVICE_ID_mqdma {9014} \
   CONFIG.PF3_DEVICE_ID_mqdma {9014} \
   CONFIG.axi_data_width {64_bit} \
   CONFIG.axilite_master_en {true} \
   CONFIG.axisten_freq {125} \
   CONFIG.cfg_mgmt_if {false} \
   CONFIG.pciebar2axibar_axist_bypass {0x0000000000000000} \
   CONFIG.pf0_device_id {7014} \
   CONFIG.pf0_link_status_slot_clock_config {true} \
   CONFIG.pf0_msi_enabled {false} \
   CONFIG.pf0_msix_cap_pba_bir {BAR_1} \
   CONFIG.pf0_msix_cap_table_bir {BAR_1} \
   CONFIG.pl_link_cap_max_link_width {X4} \
   CONFIG.xdma_axi_intf_mm {AXI_Stream} \
   CONFIG.xdma_axilite_slave {false} \
   CONFIG.xdma_rnum_chnl {2} \
   CONFIG.xdma_sts_ports {false} \
   CONFIG.xdma_wnum_chnl {2} \
 ] $xdma_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {10} \
   CONFIG.IN1_WIDTH {2} \
   CONFIG.IN2_WIDTH {4} \
   CONFIG.IN3_WIDTH {16} \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_1

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {5} \
 ] $xlconcat_2

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {16} \
 ] $xlconstant_0

  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {32} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {63} \
   CONFIG.DIN_TO {32} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {127} \
   CONFIG.DIN_TO {96} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {95} \
   CONFIG.DIN_TO {64} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {159} \
   CONFIG.DIN_TO {128} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {191} \
   CONFIG.DIN_TO {160} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {223} \
   CONFIG.DIN_TO {192} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {255} \
   CONFIG.DIN_TO {224} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {287} \
   CONFIG.DIN_TO {256} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {319} \
   CONFIG.DIN_TO {288} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {351} \
   CONFIG.DIN_TO {320} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {383} \
   CONFIG.DIN_TO {352} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {415} \
   CONFIG.DIN_TO {384} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {447} \
   CONFIG.DIN_TO {416} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {463} \
   CONFIG.DIN_TO {448} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {479} \
   CONFIG.DIN_TO {464} \
   CONFIG.DIN_WIDTH {512} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create interface connections
  connect_bd_intf_net -intf_net Codec_Mic_Stream_1 [get_bd_intf_pins Codec_Mic_Stream] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins pcie_7x_mgt_rtl_0] [get_bd_intf_pins xdma_0/pcie_mgt]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins diff_clock_rtl_0] [get_bd_intf_pins pci_clk_buf/CLK_IN_D]
  connect_bd_intf_net -intf_net RX_Data_1 [get_bd_intf_pins RX_Data] [get_bd_intf_pins axis_data_fifo_1/S_AXIS]
  connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_pins axi_interconnect_0/S00_AXI] [get_bd_intf_pins xdma_0/M_AXI_LITE]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_gpio_0/S_AXI] [get_bd_intf_pins axi_interconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_cfg_register_0/s_axi] [get_bd_intf_pins axi_interconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins axi_quad_spi_0/AXI_LITE]
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_pins axis_data_fifo_0/M_AXIS] [get_bd_intf_pins xdma_0/S_AXIS_C2H_1]
  connect_bd_intf_net -intf_net axis_data_fifo_1_M_AXIS [get_bd_intf_pins axis_data_fifo_1/M_AXIS] [get_bd_intf_pins xdma_0/S_AXIS_C2H_0]
  connect_bd_intf_net -intf_net axis_data_fifo_2_M_AXIS [get_bd_intf_pins axis_data_fifo_2/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_2/S_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_3_M_AXIS [get_bd_intf_pins axis_data_fifo_3/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_3/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_data_fifo_0/S_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_2_M_AXIS [get_bd_intf_pins TX_Data] [get_bd_intf_pins axis_dwidth_converter_2/M_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_3_M_AXIS [get_bd_intf_pins Codec_Spkr_Data] [get_bd_intf_pins axis_dwidth_converter_3/M_AXIS]
  connect_bd_intf_net -intf_net xdma_0_M_AXIS_H2C_0 [get_bd_intf_pins axis_data_fifo_2/S_AXIS] [get_bd_intf_pins xdma_0/M_AXIS_H2C_0]

  # Create port connections
  connect_bd_net -net ADC_Overrange_1 [get_bd_pins ADC_Overrange] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net D_register_0_dout [get_bd_pins axi_resetn] [get_bd_pins D_register_0/dout]
  connect_bd_net -net Net [get_bd_pins ck_12] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins axis_data_fifo_3/m_axis_aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_dwidth_converter_3/aclk]
  connect_bd_net -net Net1 [get_bd_pins ck_122] [get_bd_pins axis_data_fifo_1/s_axis_aclk] [get_bd_pins axis_data_fifo_2/m_axis_aclk] [get_bd_pins axis_dwidth_converter_2/aclk]
  connect_bd_net -net Net2 [get_bd_pins D_register_1/din] [get_bd_pins Double_D_register_0/dout] [get_bd_pins xlconcat_2/In0] [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconcat_2/In2] [get_bd_pins xlconcat_2/In3] [get_bd_pins xlconcat_2/In4]
  connect_bd_net -net Net3 [get_bd_pins D_register_0/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins xlconstant_1/dout]
  connect_bd_net -net SPI_MISO_1 [get_bd_pins SPI_MISO] [get_bd_pins axi_quad_spi_0/io1_i]
  connect_bd_net -net Status_data_1 [get_bd_pins Status_data] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net Usr_Reg_Access_0_Usr_Reg_Data [get_bd_pins Usr_Reg_Access_0/Usr_Reg_Data] [get_bd_pins axi_gpio_0/gpio2_io_i]
  connect_bd_net -net axi_cfg_register_0_cfg_data [get_bd_pins axi_cfg_register_0/cfg_data] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net axi_quad_spi_0_io0_o [get_bd_pins SPI_MOSI] [get_bd_pins axi_quad_spi_0/io0_o]
  connect_bd_net -net axi_quad_spi_0_ss_o [get_bd_pins SPI_SSn] [get_bd_pins axi_quad_spi_0/ss_o]
  connect_bd_net -net axis_data_fifo_0_prog_full [get_bd_pins axis_data_fifo_0/prog_full] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net axis_data_fifo_1_prog_full [get_bd_pins axis_data_fifo_1/prog_full] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net axis_data_fifo_2_prog_empty [get_bd_pins axis_data_fifo_2/prog_empty] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net axis_data_fifo_3_prog_empty [get_bd_pins axis_data_fifo_3/prog_empty] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net clk_122_1 [get_bd_pins clk_122] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins Double_D_register_0/aclk] [get_bd_pins axi_cfg_register_0/aclk] [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK]
  connect_bd_net -net reset_rtl_0_1 [get_bd_pins reset_rtl_0] [get_bd_pins xdma_0/sys_rst_n]
  connect_bd_net -net util_ds_buf_IBUF_OUT [get_bd_pins pci_clk_buf/IBUF_OUT] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net xdma_0_axi_aclk [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_quad_spi_0/ext_spi_clk] [get_bd_pins axi_quad_spi_0/s_axi_aclk] [get_bd_pins axis_data_fifo_0/m_axis_aclk] [get_bd_pins axis_data_fifo_1/m_axis_aclk] [get_bd_pins axis_data_fifo_2/s_axis_aclk] [get_bd_pins axis_data_fifo_3/s_axis_aclk] [get_bd_pins xdma_0/axi_aclk]
  connect_bd_net -net xdma_0_axi_aresetn [get_bd_pins D_register_1/dout] [get_bd_pins axi_cfg_register_0/aresetn] [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axis_data_fifo_0/s_axis_aresetn] [get_bd_pins axis_data_fifo_1/s_axis_aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_dwidth_converter_2/aresetn] [get_bd_pins axis_dwidth_converter_3/aresetn]
  connect_bd_net -net xdma_0_axi_aresetn1 [get_bd_pins Double_D_register_0/din] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_quad_spi_0/s_axi_aresetn] [get_bd_pins axis_data_fifo_2/s_axis_aresetn] [get_bd_pins axis_data_fifo_3/s_axis_aresetn] [get_bd_pins xdma_0/axi_aresetn]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins axi_gpio_0/gpio_io_i] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins D_register_0/din] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins RXConfigData] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins RFGPIOData] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins ADCCtrlData] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins DACCtrlData] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins RXSPIData] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins TXSPIData] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins LEDDrivers] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins RXFreq1Data] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins RXFreq3Data] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins RXFreq2Data] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins RXFreq4Data] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins KeyerConfigData] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins CodecConfigData] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins TXConfigData] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins TXFreqData] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins TXTestFreqData] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: DAC_LVDS_Pins
proc create_hier_cell_DAC_LVDS_Pins { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_DAC_LVDS_Pins() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 15 -to 0 DAC_Out_N
  create_bd_pin -dir O -from 15 -to 0 DAC_Out_P
  create_bd_pin -dir I -from 15 -to 0 DAC_SingleEnded

  # Create instance: util_ds_buf_DACDriver, and set properties
  set util_ds_buf_DACDriver [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_DACDriver ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {OBUFDS} \
   CONFIG.C_SIZE {16} \
 ] $util_ds_buf_DACDriver

  # Create port connections
  connect_bd_net -net DAC_SingleEnded_1 [get_bd_pins DAC_SingleEnded] [get_bd_pins util_ds_buf_DACDriver/OBUF_IN]
  connect_bd_net -net util_ds_buf_0_OBUF_DS_N [get_bd_pins DAC_Out_N] [get_bd_pins util_ds_buf_DACDriver/OBUF_DS_N]
  connect_bd_net -net util_ds_buf_0_OBUF_DS_P [get_bd_pins DAC_Out_P] [get_bd_pins util_ds_buf_DACDriver/OBUF_DS_P]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: ADC_LVDS_Pins
proc create_hier_cell_ADC_LVDS_Pins { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_ADC_LVDS_Pins() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 0 -to 0 ADC1Overrange_SingleEnded
  create_bd_pin -dir I ADC1_CLKin_N
  create_bd_pin -dir I ADC1_CLKin_P
  create_bd_pin -dir O -from 0 -to 0 ADC1_CLKout_se
  create_bd_pin -dir I -from 15 -to 0 ADC1_In_N
  create_bd_pin -dir I -from 15 -to 0 ADC1_In_P
  create_bd_pin -dir I ADC1_Ovr_In_N
  create_bd_pin -dir I ADC1_Ovr_In_P
  create_bd_pin -dir O -from 15 -to 0 ADC1_SingleEnded
  create_bd_pin -dir O -from 0 -to 0 ADC2Overrange_SingleEnded
  create_bd_pin -dir I ADC2_CLKin_N
  create_bd_pin -dir I ADC2_CLKin_P
  create_bd_pin -dir O -from 0 -to 0 ADC2_CLKout_se
  create_bd_pin -dir I -from 15 -to 0 ADC2_In_N
  create_bd_pin -dir I -from 15 -to 0 ADC2_In_P
  create_bd_pin -dir I ADC2_Ovr_In_N
  create_bd_pin -dir I ADC2_Ovr_In_P
  create_bd_pin -dir O -from 15 -to 0 ADC2_SingleEnded

  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_0 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
   CONFIG.C_SIZE {16} \
 ] $util_ds_buf_0

  # Create instance: util_ds_buf_1, and set properties
  set util_ds_buf_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_1 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
   CONFIG.C_SIZE {16} \
 ] $util_ds_buf_1

  # Create instance: util_ds_buf_2, and set properties
  set util_ds_buf_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_2 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
   CONFIG.C_SIZE {1} \
 ] $util_ds_buf_2

  # Create instance: util_ds_buf_3, and set properties
  set util_ds_buf_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_3 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
   CONFIG.C_SIZE {1} \
 ] $util_ds_buf_3

  # Create instance: util_ds_buf_4, and set properties
  set util_ds_buf_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_4 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
 ] $util_ds_buf_4

  # Create instance: util_ds_buf_5, and set properties
  set util_ds_buf_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_5 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDS} \
 ] $util_ds_buf_5

  # Create port connections
  connect_bd_net -net ADC1_CLKin_N_1 [get_bd_pins ADC1_CLKin_N] [get_bd_pins util_ds_buf_4/IBUF_DS_N]
  connect_bd_net -net ADC1_CLKin_P_1 [get_bd_pins ADC1_CLKin_P] [get_bd_pins util_ds_buf_4/IBUF_DS_P]
  connect_bd_net -net ADC1_In_N_1 [get_bd_pins ADC1_In_N] [get_bd_pins util_ds_buf_0/IBUF_DS_N]
  connect_bd_net -net ADC1_In_N_2 [get_bd_pins ADC2_In_N] [get_bd_pins util_ds_buf_1/IBUF_DS_N]
  connect_bd_net -net ADC1_In_P_1 [get_bd_pins ADC1_In_P] [get_bd_pins util_ds_buf_0/IBUF_DS_P]
  connect_bd_net -net ADC1_In_P_2 [get_bd_pins ADC2_In_P] [get_bd_pins util_ds_buf_1/IBUF_DS_P]
  connect_bd_net -net ADC1_Ovr_In_N_1 [get_bd_pins ADC1_Ovr_In_N] [get_bd_pins util_ds_buf_3/IBUF_DS_N]
  connect_bd_net -net ADC1_Ovr_In_P_1 [get_bd_pins ADC1_Ovr_In_P] [get_bd_pins util_ds_buf_3/IBUF_DS_P]
  connect_bd_net -net ADC2_CLKin_N_1 [get_bd_pins ADC2_CLKin_N] [get_bd_pins util_ds_buf_5/IBUF_DS_N]
  connect_bd_net -net ADC2_CLKin_P_1 [get_bd_pins ADC2_CLKin_P] [get_bd_pins util_ds_buf_5/IBUF_DS_P]
  connect_bd_net -net ADC2_Ovr_In_N_1 [get_bd_pins ADC2_Ovr_In_N] [get_bd_pins util_ds_buf_2/IBUF_DS_N]
  connect_bd_net -net ADC2_Ovr_In_P_1 [get_bd_pins ADC2_Ovr_In_P] [get_bd_pins util_ds_buf_2/IBUF_DS_P]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins ADC1_SingleEnded] [get_bd_pins util_ds_buf_0/IBUF_OUT]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT1 [get_bd_pins ADC2_SingleEnded] [get_bd_pins util_ds_buf_1/IBUF_OUT]
  connect_bd_net -net util_ds_buf_2_IBUF_OUT [get_bd_pins ADC2Overrange_SingleEnded] [get_bd_pins util_ds_buf_2/IBUF_OUT]
  connect_bd_net -net util_ds_buf_3_IBUF_OUT [get_bd_pins ADC1Overrange_SingleEnded] [get_bd_pins util_ds_buf_3/IBUF_OUT]
  connect_bd_net -net util_ds_buf_4_IBUF_OUT [get_bd_pins ADC1_CLKout_se] [get_bd_pins util_ds_buf_4/IBUF_OUT]
  connect_bd_net -net util_ds_buf_5_IBUF_OUT [get_bd_pins ADC2_CLKout_se] [get_bd_pins util_ds_buf_5/IBUF_OUT]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set pcie_7x_mgt_rtl_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_7x_mgt_rtl_0 ]
  set pcie_diff_clock_rtl [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_diff_clock_rtl ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {100000000} \
   ] $pcie_diff_clock_rtl

  # Create ports
  set ADC1Ovr_In_N [ create_bd_port -dir I ADC1Ovr_In_N ]
  set ADC1Ovr_In_P [ create_bd_port -dir I ADC1Ovr_In_P ]
  set ADC1_ATTEN_CLK [ create_bd_port -dir O ADC1_ATTEN_CLK ]
  set ADC1_ATTEN_DAT [ create_bd_port -dir O ADC1_ATTEN_DAT ]
  set ADC1_ATTEN_LE [ create_bd_port -dir O ADC1_ATTEN_LE ]
  set ADC1_CLKin_N [ create_bd_port -dir I ADC1_CLKin_N ]
  set ADC1_CLKin_P [ create_bd_port -dir I ADC1_CLKin_P ]
  set ADC1_In_N [ create_bd_port -dir I -from 15 -to 0 ADC1_In_N ]
  set ADC1_In_P [ create_bd_port -dir I -from 15 -to 0 ADC1_In_P ]
  set ADC2Ovr_In_N [ create_bd_port -dir I ADC2Ovr_In_N ]
  set ADC2Ovr_In_P [ create_bd_port -dir I ADC2Ovr_In_P ]
  set ADC2_ATTEN_CLK [ create_bd_port -dir O ADC2_ATTEN_CLK ]
  set ADC2_ATTEN_DAT [ create_bd_port -dir O ADC2_ATTEN_DAT ]
  set ADC2_ATTEN_LE [ create_bd_port -dir O ADC2_ATTEN_LE ]
  set ADC2_CLKin_N [ create_bd_port -dir I ADC2_CLKin_N ]
  set ADC2_CLKin_P [ create_bd_port -dir I ADC2_CLKin_P ]
  set ADC2_In_N [ create_bd_port -dir I -from 15 -to 0 ADC2_In_N ]
  set ADC2_In_P [ create_bd_port -dir I -from 15 -to 0 ADC2_In_P ]
  set ATU_TUNE [ create_bd_port -dir O -from 0 -to 0 ATU_TUNE ]
  set BCLK [ create_bd_port -dir O BCLK ]
  set BIAS_CTRL [ create_bd_port -dir O -from 0 -to 0 BIAS_CTRL ]
  set CLASS_E_SEL [ create_bd_port -dir O -from 0 -to 0 CLASS_E_SEL ]
  set CTRL_TRSW [ create_bd_port -dir O CTRL_TRSW ]
  set DAC_Out_N [ create_bd_port -dir O -from 15 -to 0 DAC_Out_N ]
  set DAC_Out_P [ create_bd_port -dir O -from 15 -to 0 DAC_Out_P ]
  set DAC_SPI_CK [ create_bd_port -dir O -from 0 -to 0 DAC_SPI_CK ]
  set DAC_SPI_MISO [ create_bd_port -dir I DAC_SPI_MISO ]
  set DAC_SPI_MOSI [ create_bd_port -dir O -from 0 -to 0 DAC_SPI_MOSI ]
  set DAC_SPI_SSn [ create_bd_port -dir O -from 0 -to 0 DAC_SPI_SSn ]
  set DRIVER_PA_EN [ create_bd_port -dir O DRIVER_PA_EN ]
  set Dac_Atten [ create_bd_port -dir O -from 5 -to 0 Dac_Atten ]
  set GPIO_OUT [ create_bd_port -dir O -from 23 -to 0 GPIO_OUT ]
  set LEDOutputs [ create_bd_port -dir O -from 15 -to 0 LEDOutputs ]
  set LRCLK [ create_bd_port -dir O LRCLK ]
  set MCLK [ create_bd_port -dir O -type clk MCLK ]
  set MOX_strobe [ create_bd_port -dir O MOX_strobe ]
  set PROM_SPI_MISO [ create_bd_port -dir I PROM_SPI_MISO ]
  set PROM_SPI_MOSI [ create_bd_port -dir O PROM_SPI_MOSI ]
  set PROM_SPI_SSn [ create_bd_port -dir O -from 0 -to 0 PROM_SPI_SSn ]
  set PURESIGNAL_ENABLE [ create_bd_port -dir O -from 0 -to 0 PURESIGNAL_ENABLE ]
  set RF_SPI_CK [ create_bd_port -dir O RF_SPI_CK ]
  set RF_SPI_DATA [ create_bd_port -dir O RF_SPI_DATA ]
  set RF_SPI_RX_LOAD [ create_bd_port -dir O RF_SPI_RX_LOAD ]
  set RF_SPI_TX_LOAD [ create_bd_port -dir O RF_SPI_TX_LOAD ]
  set TXRX_RELAY [ create_bd_port -dir O TXRX_RELAY ]
  set TX_DAC_PWM [ create_bd_port -dir O TX_DAC_PWM ]
  set clock_122_in_n [ create_bd_port -dir I clock_122_in_n ]
  set clock_122_in_p [ create_bd_port -dir I -type clk clock_122_in_p ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
 ] $clock_122_in_p
  set i2srxd [ create_bd_port -dir I i2srxd ]
  set i2stxd [ create_bd_port -dir O i2stxd ]
  set pcie_reset_n [ create_bd_port -dir I -type rst pcie_reset_n ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $pcie_reset_n
  set pll_cr [ create_bd_port -dir O pll_cr ]
  set ref_in_10 [ create_bd_port -dir I ref_in_10 ]
  set status_in [ create_bd_port -dir I -from 9 -to 0 status_in ]

  # Create instance: ADC_LVDS_Pins
  create_hier_cell_ADC_LVDS_Pins [current_bd_instance .] ADC_LVDS_Pins

  # Create instance: DAC_LVDS_Pins
  create_hier_cell_DAC_LVDS_Pins [current_bd_instance .] DAC_LVDS_Pins

  # Create instance: PCIe
  create_hier_cell_PCIe [current_bd_instance .] PCIe

  # Create instance: RF_interfaces
  create_hier_cell_RF_interfaces [current_bd_instance .] RF_interfaces

  # Create instance: Receiver
  create_hier_cell_Receiver [current_bd_instance .] Receiver

  # Create instance: Transmitter
  create_hier_cell_Transmitter [current_bd_instance .] Transmitter

  # Create instance: audio_codec
  create_hier_cell_audio_codec [current_bd_instance .] audio_codec

  # Create instance: clock_generator
  create_hier_cell_clock_generator [current_bd_instance .] clock_generator

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DIN_WIDTH {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DIN_WIDTH {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create interface connections
  connect_bd_intf_net -intf_net Codec_Mic_Stream_1 [get_bd_intf_pins PCIe/Codec_Mic_Stream] [get_bd_intf_pins audio_codec/RX_Audio_Data]
  connect_bd_intf_net -intf_net PCIe_Codec_Spkr_Data [get_bd_intf_pins PCIe/Codec_Spkr_Data] [get_bd_intf_pins audio_codec/LR_Spkr_data]
  connect_bd_intf_net -intf_net PCIe_TX_Data [get_bd_intf_pins PCIe/TX_Data] [get_bd_intf_pins Transmitter/TX_IQ_In]
  connect_bd_intf_net -intf_net PCIe_pcie_7x_mgt_rtl_0 [get_bd_intf_ports pcie_7x_mgt_rtl_0] [get_bd_intf_pins PCIe/pcie_7x_mgt_rtl_0]
  connect_bd_intf_net -intf_net Receiver_ddc_iqstream [get_bd_intf_pins PCIe/RX_Data] [get_bd_intf_pins Receiver/ddc_iqstream]
  connect_bd_intf_net -intf_net Transmitter_TX_DDS_IQ [get_bd_intf_pins Receiver/TXDDSIn] [get_bd_intf_pins Transmitter/TX_DDS_IQ]
  connect_bd_intf_net -intf_net diff_clock_rtl_0_1 [get_bd_intf_ports pcie_diff_clock_rtl] [get_bd_intf_pins PCIe/diff_clock_rtl_0]

  # Create port connections
  connect_bd_net -net ADC1Ovr_In_N_1 [get_bd_ports ADC1Ovr_In_N] [get_bd_pins ADC_LVDS_Pins/ADC1_Ovr_In_N]
  connect_bd_net -net ADC1Ovr_In_P_1 [get_bd_ports ADC1Ovr_In_P] [get_bd_pins ADC_LVDS_Pins/ADC1_Ovr_In_P]
  connect_bd_net -net ADC1_CLKin_N_1 [get_bd_ports ADC1_CLKin_N] [get_bd_pins ADC_LVDS_Pins/ADC1_CLKin_N]
  connect_bd_net -net ADC1_CLKin_P_1 [get_bd_ports ADC1_CLKin_P] [get_bd_pins ADC_LVDS_Pins/ADC1_CLKin_P]
  connect_bd_net -net ADC1_In_N_1 [get_bd_ports ADC1_In_N] [get_bd_pins ADC_LVDS_Pins/ADC1_In_N]
  connect_bd_net -net ADC1_In_P_1 [get_bd_ports ADC1_In_P] [get_bd_pins ADC_LVDS_Pins/ADC1_In_P]
  connect_bd_net -net ADC2Ovr_In_N_1 [get_bd_ports ADC2Ovr_In_N] [get_bd_pins ADC_LVDS_Pins/ADC2_Ovr_In_N]
  connect_bd_net -net ADC2Ovr_In_P_1 [get_bd_ports ADC2Ovr_In_P] [get_bd_pins ADC_LVDS_Pins/ADC2_Ovr_In_P]
  connect_bd_net -net ADC2_CLKin_N_1 [get_bd_ports ADC2_CLKin_N] [get_bd_pins ADC_LVDS_Pins/ADC2_CLKin_N]
  connect_bd_net -net ADC2_CLKin_P_1 [get_bd_ports ADC2_CLKin_P] [get_bd_pins ADC_LVDS_Pins/ADC2_CLKin_P]
  connect_bd_net -net ADC2_In_N_1 [get_bd_ports ADC2_In_N] [get_bd_pins ADC_LVDS_Pins/ADC2_In_N]
  connect_bd_net -net ADC2_In_P_1 [get_bd_ports ADC2_In_P] [get_bd_pins ADC_LVDS_Pins/ADC2_In_P]
  connect_bd_net -net ADC_Ctrl_1 [get_bd_pins PCIe/ADCCtrlData] [get_bd_pins RF_interfaces/ADC_Ctrl]
  connect_bd_net -net ADC_LVDS_Pins_ADC1Overrange_SingleEnded [get_bd_pins ADC_LVDS_Pins/ADC1Overrange_SingleEnded] [get_bd_pins Receiver/ADC1_Overrange]
  connect_bd_net -net ADC_LVDS_Pins_ADC1_SingleEnded [get_bd_pins ADC_LVDS_Pins/ADC1_SingleEnded] [get_bd_pins Receiver/adc1]
  connect_bd_net -net ADC_LVDS_Pins_ADC2Overrange_SingleEnded [get_bd_pins ADC_LVDS_Pins/ADC2Overrange_SingleEnded] [get_bd_pins Receiver/ADC2_Overrange]
  connect_bd_net -net ADC_LVDS_Pins_ADC2_SingleEnded [get_bd_pins ADC_LVDS_Pins/ADC2_SingleEnded] [get_bd_pins Receiver/adc2]
  connect_bd_net -net ChanFreq2_1 [get_bd_pins PCIe/RXFreq2Data] [get_bd_pins Receiver/ChanFreq2]
  connect_bd_net -net ChanFreq4_1 [get_bd_pins PCIe/RXFreq4Data] [get_bd_pins Receiver/ChanFreq4]
  connect_bd_net -net CodecConfig_1 [get_bd_pins PCIe/CodecConfigData] [get_bd_pins audio_codec/CodecConfig]
  connect_bd_net -net DAC_Ctrl_1 [get_bd_pins PCIe/DACCtrlData] [get_bd_pins RF_interfaces/DAC_Ctrl]
  connect_bd_net -net DAC_LVDS_Pins_DAC_Out_N [get_bd_ports DAC_Out_N] [get_bd_pins DAC_LVDS_Pins/DAC_Out_N]
  connect_bd_net -net DAC_LVDS_Pins_DAC_Out_P [get_bd_ports DAC_Out_P] [get_bd_pins DAC_LVDS_Pins/DAC_Out_P]
  connect_bd_net -net DAC_SPI_MISO_1 [get_bd_ports DAC_SPI_MISO] [get_bd_pins Transmitter/DAC_SPI_MISO]
  connect_bd_net -net DAC_SingleEnded_1 [get_bd_pins DAC_LVDS_Pins/DAC_SingleEnded] [get_bd_pins Transmitter/TXDACData]
  connect_bd_net -net I2S_xmit_0_outbit [get_bd_ports i2stxd] [get_bd_pins audio_codec/i2stxd]
  connect_bd_net -net PCIe_LEDDrivers [get_bd_ports LEDOutputs] [get_bd_pins PCIe/LEDDrivers]
  connect_bd_net -net PCIe_RFGPIOData [get_bd_pins PCIe/RFGPIOData] [get_bd_pins RF_interfaces/RF_GPIO]
  connect_bd_net -net PCIe_RXFreq1Data [get_bd_pins PCIe/RXFreq1Data] [get_bd_pins Receiver/ChanFreq]
  connect_bd_net -net PCIe_RXFreq3Data [get_bd_pins PCIe/RXFreq3Data] [get_bd_pins Receiver/ChanFreq3]
  connect_bd_net -net PCIe_SPI_MOSI [get_bd_ports PROM_SPI_MOSI] [get_bd_pins PCIe/SPI_MOSI]
  connect_bd_net -net PCIe_SPI_SSn [get_bd_ports PROM_SPI_SSn] [get_bd_pins PCIe/SPI_SSn]
  connect_bd_net -net PCIe_TXTestFreqData [get_bd_pins PCIe/TXTestFreqData] [get_bd_pins Transmitter/TXTestFreq]
  connect_bd_net -net PCIe_axi_resetn [get_bd_pins PCIe/axi_resetn] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din]
  connect_bd_net -net PWM_DAC_0_DAC_bit [get_bd_ports TX_DAC_PWM] [get_bd_pins RF_interfaces/TX_DAC_PWM]
  connect_bd_net -net RF_interfaces_ADC_Randomise [get_bd_pins RF_interfaces/ADC_Randomise] [get_bd_pins Receiver/ADC_Randomise]
  connect_bd_net -net RF_interfaces_status_out [get_bd_pins PCIe/Status_data] [get_bd_pins RF_interfaces/status_out]
  connect_bd_net -net RXConfig_1 [get_bd_pins PCIe/RXConfigData] [get_bd_pins Receiver/RXConfig]
  connect_bd_net -net RX_SPI_1 [get_bd_pins PCIe/RXSPIData] [get_bd_pins RF_interfaces/RX_SPI]
  connect_bd_net -net Receiver_ADC_Overrange [get_bd_pins PCIe/ADC_Overrange] [get_bd_pins Receiver/ADC_Overrange]
  connect_bd_net -net SPI_0_Rx_load_strobe [get_bd_ports RF_SPI_RX_LOAD] [get_bd_pins RF_interfaces/RF_SPI_RX_LOAD]
  connect_bd_net -net SPI_0_SPI_clock [get_bd_ports RF_SPI_CK] [get_bd_pins RF_interfaces/RF_SPI_CK]
  connect_bd_net -net SPI_0_SPI_data [get_bd_ports RF_SPI_DATA] [get_bd_pins RF_interfaces/RF_SPI_DATA]
  connect_bd_net -net SPI_0_Tx_load_strobe [get_bd_ports RF_SPI_TX_LOAD] [get_bd_pins RF_interfaces/RF_SPI_TX_LOAD]
  connect_bd_net -net SPI_MISO_1 [get_bd_ports PROM_SPI_MISO] [get_bd_pins PCIe/SPI_MISO]
  connect_bd_net -net SerialAtten_0_ATTN_CLK [get_bd_ports ADC1_ATTEN_CLK] [get_bd_pins RF_interfaces/ADC1_ATTEN_CLK]
  connect_bd_net -net SerialAtten_0_ATTN_DATA [get_bd_ports ADC1_ATTEN_DAT] [get_bd_pins RF_interfaces/ADC1_ATTEN_DAT]
  connect_bd_net -net SerialAtten_0_ATTN_LE [get_bd_ports ADC1_ATTEN_LE] [get_bd_pins RF_interfaces/ADC1_ATTEN_LE]
  connect_bd_net -net SerialAtten_1_ATTN_CLK [get_bd_ports ADC2_ATTEN_CLK] [get_bd_pins RF_interfaces/ADC2_ATTEN_CLK]
  connect_bd_net -net SerialAtten_1_ATTN_DATA [get_bd_ports ADC2_ATTEN_DAT] [get_bd_pins RF_interfaces/ADC2_ATTEN_DAT]
  connect_bd_net -net SerialAtten_1_ATTN_LE [get_bd_ports ADC2_ATTEN_LE] [get_bd_pins RF_interfaces/ADC2_ATTEN_LE]
  connect_bd_net -net TXConfig_1 [get_bd_pins PCIe/TXConfigData] [get_bd_pins Transmitter/TXConfig]
  connect_bd_net -net TXLOTune_1 [get_bd_pins PCIe/TXFreqData] [get_bd_pins Transmitter/TXLOTune]
  connect_bd_net -net TX_SPI_1 [get_bd_pins PCIe/TXSPIData] [get_bd_pins RF_interfaces/TX_SPI]
  connect_bd_net -net Transmitter_DAC_SPI_CK [get_bd_ports DAC_SPI_CK] [get_bd_pins Transmitter/DAC_SPI_CK]
  connect_bd_net -net Transmitter_DAC_SPI_MOSI [get_bd_ports DAC_SPI_MOSI] [get_bd_pins Transmitter/DAC_SPI_MOSI]
  connect_bd_net -net Transmitter_DAC_SPI_SSn [get_bd_ports DAC_SPI_SSn] [get_bd_pins Transmitter/DAC_SPI_SSn]
  connect_bd_net -net Transmitter_cw_ptt1 [get_bd_pins RF_interfaces/keyer_PTT] [get_bd_pins Transmitter/cw_ptt1]
  connect_bd_net -net audio_codec_MCLK [get_bd_ports MCLK] [get_bd_pins audio_codec/MCLK]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins PCIe/ck_12] [get_bd_pins RF_interfaces/clk] [get_bd_pins audio_codec/clk1] [get_bd_pins clock_generator/clock_12_out]
  connect_bd_net -net clock_122_1 [get_bd_ports clock_122_in_p] [get_bd_pins clock_generator/clock_122_in_p]
  connect_bd_net -net clock_122_delayed_1 [get_bd_pins Receiver/clock_122_delayed] [get_bd_pins clock_generator/clock_122_out_delayed]
  connect_bd_net -net clock_122_in_n_1 [get_bd_ports clock_122_in_n] [get_bd_pins clock_generator/clock_122_in_n]
  connect_bd_net -net clock_generator_clock_122_out [get_bd_pins PCIe/ck_122] [get_bd_pins PCIe/clk_122] [get_bd_pins Receiver/aclk] [get_bd_pins Transmitter/clk2] [get_bd_pins clock_generator/clock_122_out]
  connect_bd_net -net cw_key_1 [get_bd_pins RF_interfaces/CW_Key_Down] [get_bd_pins Transmitter/cw_key_down] [get_bd_pins audio_codec/cw_key]
  connect_bd_net -net i2s_clk_lrclk_gen_0_BCLK [get_bd_ports BCLK] [get_bd_pins audio_codec/BCLK]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRCLK [get_bd_ports LRCLK] [get_bd_pins audio_codec/LRCLK]
  connect_bd_net -net is2rxd_1 [get_bd_ports i2srxd] [get_bd_pins audio_codec/i2srxd]
  connect_bd_net -net keyer_config_1 [get_bd_pins PCIe/KeyerConfigData] [get_bd_pins Transmitter/keyer_config] [get_bd_pins audio_codec/keyer_config]
  connect_bd_net -net ref_in_10_1 [get_bd_ports ref_in_10] [get_bd_pins clock_generator/ref_in_10]
  connect_bd_net -net regmux_2_1_1_dout [get_bd_ports Dac_Atten] [get_bd_pins RF_interfaces/Dac_Atten]
  connect_bd_net -net reset_rtl_0_1 [get_bd_ports pcie_reset_n] [get_bd_pins PCIe/reset_rtl_0]
  connect_bd_net -net status_in_1 [get_bd_ports status_in] [get_bd_pins RF_interfaces/status_in]
  connect_bd_net -net tx_samples_1 [get_bd_pins Receiver/tx_samples] [get_bd_pins Transmitter/TXSamplesToRX]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_ports pll_cr] [get_bd_pins clock_generator/pll_cr]
  connect_bd_net -net util_reduced_logic_1_Res [get_bd_ports DRIVER_PA_EN] [get_bd_ports MOX_strobe] [get_bd_pins RF_interfaces/MOX_strobe] [get_bd_pins Receiver/TX_Strb] [get_bd_pins Transmitter/TXStrobe]
  connect_bd_net -net util_reduced_logic_2_Res [get_bd_ports CTRL_TRSW] [get_bd_pins RF_interfaces/CTRL_TRSW]
  connect_bd_net -net util_reduced_logic_3_Res [get_bd_ports TXRX_RELAY] [get_bd_pins RF_interfaces/TXRX_RELAY]
  connect_bd_net -net xlconstant_0_dout [get_bd_ports BIAS_CTRL] [get_bd_pins RF_interfaces/BIAS_CTRL]
  connect_bd_net -net xlslice_0_Dout [get_bd_ports GPIO_OUT] [get_bd_pins RF_interfaces/GPIO_OUT]
  connect_bd_net -net xlslice_0_Dout1 [get_bd_pins RF_interfaces/rstn] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_ports CLASS_E_SEL] [get_bd_pins RF_interfaces/CLASS_E_SEL]
  connect_bd_net -net xlslice_1_Dout1 [get_bd_pins Transmitter/resetn1] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins audio_codec/arstn] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins Receiver/rstn1] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins clock_generator/resetn] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_ports ATU_TUNE] [get_bd_pins RF_interfaces/ATU_TUNE]
  connect_bd_net -net xlslice_6_Dout [get_bd_ports PURESIGNAL_ENABLE] [get_bd_pins RF_interfaces/PURESIGNAL_ENABLE]

  # Create address segments
  create_bd_addr_seg -range 0x00010000 -offset 0x00000000 [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/axi_cfg_register_0/s_axi/reg0] SEG_axi_cfg_register_0_reg0
  create_bd_addr_seg -range 0x00010000 -offset 0x00010000 [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/axi_gpio_0/S_AXI/Reg] SEG_axi_gpio_0_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x00020000 [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/axi_quad_spi_0/AXI_LITE/Reg] SEG_axi_quad_spi_0_Reg

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ExpandedHierarchyInLayout":"",
   "comment_0":"Enter Comments here",
   "comment_1":"Enter Comments here",
   "comment_10":"main 122MHz clock distribute",
   "comment_2":"ADC1 RAND",
   "comment_3":"ADC2 RAND",
   "comment_4":"ADC1",
   "comment_5":"ACD2",
   "comment_6":"SCK connected via CCLK by internal STARTUPE2 primitive",
   "comment_7":"RX data",
   "comment_8":"TX data",
   "comment_9":"codec_spkr",
   "commentid":"comment_0|comment_1|comment_2|comment_3|comment_4|comment_5|comment_6|comment_7|comment_8|comment_9|comment_10|",
   "fillcolor_comment_0":"",
   "fillcolor_comment_1":"",
   "fillcolor_comment_2":"",
   "fillcolor_comment_3":"",
   "fillcolor_comment_4":"",
   "fillcolor_comment_5":"",
   "fillcolor_comment_6":"",
   "fillcolor_comment_7":"",
   "fillcolor_comment_8":"",
   "fillcolor_comment_9":"",
   "font_comment_0":"14",
   "font_comment_1":"14",
   "font_comment_10":"14",
   "font_comment_2":"14",
   "font_comment_3":"14",
   "font_comment_4":"14",
   "font_comment_5":"14",
   "font_comment_6":"14",
   "font_comment_7":"14",
   "font_comment_8":"14",
   "font_comment_9":"14",
   "guistr":"# # String gsaved with Nlview 6.8.11  2018-08-07 bk=1.4403 VDI=40 GEI=35 GUI=JA:9.0 non-TLS
#  -string -flagsOSRD
preplace port RF_SPI_TX_LOAD -pg 1 -y 300 -defaultsOSRD
preplace port RF_SPI_DATA -pg 1 -y 260 -defaultsOSRD
preplace port ADC1_ATTEN_DAT -pg 1 -y 60 -defaultsOSRD
preplace port clock_122_in_p -pg 1 -y 1370 -defaultsOSRD
preplace port MOX_strobe -pg 1 -y 220 -defaultsOSRD
preplace port ADC1_CLKin_P -pg 1 -y 1230 -defaultsOSRD
preplace port pll_cr -pg 1 -y 1320 -defaultsOSRD
preplace port ADC1_ATTEN_CLK -pg 1 -y 40 -defaultsOSRD
preplace port MCLK -pg 1 -y 940 -defaultsOSRD
preplace port ADC2_CLKin_N -pg 1 -y 1310 -defaultsOSRD
preplace port pcie_reset_n -pg 1 -y -60 -defaultsOSRD
preplace port ADC2_ATTEN_CLK -pg 1 -y 100 -defaultsOSRD
preplace port ADC1_ATTEN_LE -pg 1 -y 80 -defaultsOSRD
preplace port i2stxd -pg 1 -y 900 -defaultsOSRD
preplace port BCLK -pg 1 -y 860 -defaultsOSRD
preplace port ADC2_CLKin_P -pg 1 -y 1280 -defaultsOSRD
preplace port ADC2_ATTEN_LE -pg 1 -y 140 -defaultsOSRD
preplace port TX_DAC_PWM -pg 1 -y 180 -defaultsOSRD
preplace port RF_SPI_CK -pg 1 -y 240 -defaultsOSRD
preplace port PROM_SPI_MOSI -pg 1 -y -310 -defaultsOSRD
preplace port i2srxd -pg 1 -y 860 -defaultsOSRD
preplace port RF_SPI_RX_LOAD -pg 1 -y 280 -defaultsOSRD
preplace port PROM_SPI_MISO -pg 1 -y -250 -defaultsOSRD
preplace port ADC1Ovr_In_N -pg 1 -y 1140 -defaultsOSRD
preplace port pcie_diff_clock_rtl -pg 1 -y -150 -defaultsOSRD
preplace port pcie_7x_mgt_rtl_0 -pg 1 -y -10 -defaultsOSRD
preplace port DAC_SPI_MISO -pg 1 -y 720 -defaultsOSRD
preplace port CTRL_TRSW -pg 1 -y 380 -defaultsOSRD
preplace port ADC2Ovr_In_N -pg 1 -y 1210 -defaultsOSRD
preplace port ADC1Ovr_In_P -pg 1 -y 1120 -defaultsOSRD
preplace port LRCLK -pg 1 -y 880 -defaultsOSRD
preplace port DRIVER_PA_EN -pg 1 -y 200 -defaultsOSRD
preplace port ref_in_10 -pg 1 -y 1390 -defaultsOSRD
preplace port clock_122_in_n -pg 1 -y 1420 -defaultsOSRD
preplace port TXRX_RELAY -pg 1 -y 440 -defaultsOSRD
preplace port ADC2_ATTEN_DAT -pg 1 -y 120 -defaultsOSRD
preplace port ADC2Ovr_In_P -pg 1 -y 1190 -defaultsOSRD
preplace port ADC1_CLKin_N -pg 1 -y 1250 -defaultsOSRD
preplace portBus ADC2_In_N -pg 1 -y 1100 -defaultsOSRD
preplace portBus BIAS_CTRL -pg 1 -y 340 -defaultsOSRD
preplace portBus ATU_TUNE -pg 1 -y 320 -defaultsOSRD
preplace portBus ADC2_In_P -pg 1 -y 1060 -defaultsOSRD
preplace portBus ADC1_In_N -pg 1 -y 1030 -defaultsOSRD
preplace portBus GPIO_OUT -pg 1 -y 400 -defaultsOSRD
preplace portBus Dac_Atten -pg 1 -y 160 -defaultsOSRD
preplace portBus DAC_SPI_MOSI -pg 1 -y 720 -defaultsOSRD
preplace portBus ADC1_In_P -pg 1 -y 1010 -defaultsOSRD
preplace portBus DAC_Out_N -pg 1 -y 690 -defaultsOSRD
preplace portBus CLASS_E_SEL -pg 1 -y 360 -defaultsOSRD
preplace portBus LEDOutputs -pg 1 -y -170 -defaultsOSRD
preplace portBus DAC_SPI_CK -pg 1 -y 740 -defaultsOSRD
preplace portBus DAC_Out_P -pg 1 -y 650 -defaultsOSRD
preplace portBus status_in -pg 1 -y 340 -defaultsOSRD
preplace portBus DAC_SPI_SSn -pg 1 -y 760 -defaultsOSRD
preplace portBus PURESIGNAL_ENABLE -pg 1 -y 420 -defaultsOSRD
preplace portBus PROM_SPI_SSn -pg 1 -y -40 -defaultsOSRD
preplace inst xlslice_0 -pg 1 -lvl 1 -y 160 -defaultsOSRD
preplace inst Transmitter -pg 1 -lvl 2 -y 1080 -defaultsOSRD
preplace inst xlslice_1 -pg 1 -lvl 1 -y 260 -defaultsOSRD
preplace inst xlslice_2 -pg 1 -lvl 1 -y 430 -defaultsOSRD
preplace inst xlslice_3 -pg 1 -lvl 1 -y 530 -defaultsOSRD
preplace inst audio_codec -pg 1 -lvl 2 -y 1320 -defaultsOSRD
preplace inst RF_interfaces -pg 1 -lvl 2 -y 680 -defaultsOSRD
preplace inst ADC_LVDS_Pins -pg 1 -lvl 1 -y 1180 -defaultsOSRD
preplace inst xlslice_4 -pg 1 -lvl 1 -y 630 -defaultsOSRD
preplace inst PCIe -pg 1 -lvl 1 -y -140 -defaultsOSRD
preplace inst DAC_LVDS_Pins -pg 1 -lvl 3 -y 660 -defaultsOSRD
preplace inst Receiver -pg 1 -lvl 2 -y 1620 -defaultsOSRD
preplace inst clock_generator -pg 1 -lvl 2 -y 1890 -defaultsOSRD
preplace netloc xlslice_2_Dout 1 1 1 -90
preplace netloc util_reduced_logic_3_Res 1 2 2 840J 590 1410
preplace netloc clock_122_in_n_1 1 0 2 NJ 1420 -180
preplace netloc RF_interfaces_status_out 1 0 3 -570 330 NJ 330 570
preplace netloc PCIe_RXFreq1Data 1 1 1 0
preplace netloc PCIe_LEDDrivers 1 1 3 130 -170 NJ -170 NJ
preplace netloc PCIe_Codec_Spkr_Data 1 1 1 100
preplace netloc util_reduced_logic_1_Res 1 1 3 160 290 710 480 1300
preplace netloc PCIe_SPI_SSn 1 1 3 20 -40 NJ -40 NJ
preplace netloc ADC2_CLKin_P_1 1 0 1 -570
preplace netloc ADC1Ovr_In_P_1 1 0 1 -650
preplace netloc ADC2Ovr_In_N_1 1 0 1 -670
preplace netloc clock_generator_clock_122_out 1 0 3 -620 -410 30 300 640
preplace netloc RX_SPI_1 1 1 1 90
preplace netloc TXConfig_1 1 1 1 50
preplace netloc xlslice_3_Dout 1 1 1 -130
preplace netloc is2rxd_1 1 0 2 NJ 860 -100
preplace netloc PCIe_RXFreq3Data 1 1 1 -60
preplace netloc SPI_0_Rx_load_strobe 1 2 2 800J 510 1330
preplace netloc ADC1_In_N_1 1 0 1 -590
preplace netloc SerialAtten_0_ATTN_LE 1 2 2 670J 420 1240
preplace netloc PCIe_TX_Data 1 1 1 120
preplace netloc xlslice_5_Dout 1 2 2 730J 530 1350
preplace netloc Transmitter_cw_ptt1 1 1 2 170 1980 550
preplace netloc xlslice_1_Dout1 1 1 1 -20
preplace netloc Transmitter_TX_DDS_IQ 1 1 2 210 1970 560
preplace netloc clock_122_1 1 0 2 NJ 1370 -170
preplace netloc PCIe_SPI_MOSI 1 1 3 -20 -310 NJ -310 NJ
preplace netloc Receiver_ddc_iqstream 1 0 3 -630 350 NJ 350 600
preplace netloc Transmitter_DAC_SPI_MOSI 1 2 2 850 720 NJ
preplace netloc SerialAtten_1_ATTN_CLK 1 2 2 680J 430 1250
preplace netloc PCIe_TXTestFreqData 1 1 1 10
preplace netloc xlslice_4_Dout 1 1 1 -150
preplace netloc ADC1_CLKin_N_1 1 0 1 -660
preplace netloc ADC_LVDS_Pins_ADC1Overrange_SingleEnded 1 1 1 -110
preplace netloc xlslice_1_Dout 1 2 2 760J 550 1370
preplace netloc keyer_config_1 1 1 1 60
preplace netloc ADC_Ctrl_1 1 1 1 150
preplace netloc i2s_clk_lrclk_gen_0_LRCLK 1 2 2 NJ 1310 1300
preplace netloc ChanFreq4_1 1 1 1 -70
preplace netloc util_reduced_logic_0_Res 1 2 2 NJ 1920 1410
preplace netloc i2s_clk_lrclk_gen_0_BCLK 1 2 2 NJ 1290 1250
preplace netloc DAC_LVDS_Pins_DAC_Out_N 1 3 1 1280
preplace netloc Transmitter_DAC_SPI_SSn 1 2 2 880 760 NJ
preplace netloc RF_interfaces_ADC_Randomise 1 1 2 180 310 580
preplace netloc xlslice_0_Dout 1 2 2 810J 570 1390
preplace netloc clock_122_delayed_1 1 1 2 190 390 590
preplace netloc PCIe_RFGPIOData 1 1 1 110
preplace netloc I2S_xmit_0_outbit 1 2 2 860J 1320 1340
preplace netloc ChanFreq2_1 1 1 1 -30
preplace netloc util_reduced_logic_2_Res 1 2 2 780J 560 1380
preplace netloc tx_samples_1 1 1 2 200 400 550
preplace netloc SerialAtten_0_ATTN_CLK 1 2 2 650J 400 1220
preplace netloc DAC_LVDS_Pins_DAC_Out_P 1 3 1 1400
preplace netloc TX_SPI_1 1 1 1 70
preplace netloc DAC_Ctrl_1 1 1 1 140
preplace netloc RXConfig_1 1 1 1 -40
preplace netloc ADC1_CLKin_P_1 1 0 1 -640
preplace netloc SerialAtten_0_ATTN_DATA 1 2 2 660J 410 1230
preplace netloc ADC2_In_N_1 1 0 1 -630
preplace netloc audio_codec_MCLK 1 2 2 N 1330 1370
preplace netloc xlslice_6_Dout 1 2 2 830J 580 1400
preplace netloc Transmitter_DAC_SPI_CK 1 2 2 860 740 NJ
preplace netloc SPI_0_SPI_data 1 2 2 770J 500 1320
preplace netloc ADC1_In_P_1 1 0 1 -570
preplace netloc DAC_SPI_MISO_1 1 0 2 NJ 720 -50
preplace netloc SPI_0_Tx_load_strobe 1 2 2 820J 520 1340
preplace netloc ADC2_CLKin_N_1 1 0 1 -590
preplace netloc status_in_1 1 0 2 -660J 690 -10
preplace netloc SPI_0_SPI_clock 1 2 2 750J 490 1310
preplace netloc PWM_DAC_0_DAC_bit 1 2 2 790J 470 1290
preplace netloc Codec_Mic_Stream_1 1 0 3 -610 320 NJ 320 620
preplace netloc cw_key_1 1 1 2 210 380 560
preplace netloc regmux_2_1_1_dout 1 2 2 720J 460 1280
preplace netloc ADC1Ovr_In_N_1 1 0 1 -670
preplace netloc DAC_SingleEnded_1 1 2 1 870
preplace netloc ADC_LVDS_Pins_ADC2_SingleEnded 1 1 1 -160
preplace netloc CodecConfig_1 1 1 1 80
preplace netloc PCIe_axi_resetn 1 0 2 -580 370 -130
preplace netloc PCIe_pcie_7x_mgt_rtl_0 1 1 3 -40 -300 N -300 1220
preplace netloc xlslice_0_Dout1 1 1 1 40
preplace netloc reset_rtl_0_1 1 0 1 -660J
preplace netloc ADC_LVDS_Pins_ADC1_SingleEnded 1 1 1 -140
preplace netloc SPI_MISO_1 1 0 1 -640
preplace netloc diff_clock_rtl_0_1 1 0 1 -660J
preplace netloc ref_in_10_1 1 0 2 NJ 1390 -190
preplace netloc TXLOTune_1 1 1 1 20
preplace netloc clk_wiz_0_clk_out2 1 0 3 -590 360 -80J 370 630J
preplace netloc SerialAtten_1_ATTN_LE 1 2 2 700J 450 1270
preplace netloc xlconstant_0_dout 1 2 2 740J 540 1360
preplace netloc ADC_LVDS_Pins_ADC2Overrange_SingleEnded 1 1 1 -120
preplace netloc ADC2Ovr_In_P_1 1 0 1 -650
preplace netloc SerialAtten_1_ATTN_DATA 1 2 2 690J 440 1260
preplace netloc Receiver_ADC_Overrange 1 0 3 -600 340 NJ 340 610
preplace netloc ADC2_In_P_1 1 0 1 -610
preplace cgraphic comment_3 place top 0 0 textcolor 4 linecolor 3
preplace cgraphic comment_2 place top 0 0 textcolor 4 linecolor 3
preplace cgraphic comment_1 place top 0 0 textcolor 4 linecolor 3
preplace cgraphic comment_0 place top 0 0 textcolor 4 linecolor 3
preplace cgraphic comment_7 place top 0 0 textcolor 4 linecolor 3
preplace cgraphic comment_6 place top 0 0 textcolor 4 linecolor 3
preplace cgraphic comment_5 place top 0 0 textcolor 4 linecolor 3
preplace cgraphic comment_4 place top 0 0 textcolor 4 linecolor 3
preplace cgraphic comment_9 place top 0 0 textcolor 4 linecolor 3
preplace cgraphic comment_8 place top 0 0 textcolor 4 linecolor 3
levelinfo -pg 1 -690 -380 380 1060 1430 -top -580 -bot 1990
",
   "linecolor_comment_0":"",
   "linecolor_comment_1":"",
   "linecolor_comment_2":"",
   "linecolor_comment_3":"",
   "linecolor_comment_4":"",
   "linecolor_comment_5":"",
   "linecolor_comment_6":"",
   "linecolor_comment_7":"",
   "linecolor_comment_8":"",
   "linecolor_comment_9":"",
   "linktoobj_comment_10":"/clock_generator/clk_wiz_0",
   "linktotype_comment_10":"bd_cell",
   "textcolor_comment_0":"",
   "textcolor_comment_1":"",
   "textcolor_comment_2":"",
   "textcolor_comment_3":"",
   "textcolor_comment_4":"",
   "textcolor_comment_5":"",
   "textcolor_comment_6":"",
   "textcolor_comment_7":"",
   "textcolor_comment_8":"",
   "textcolor_comment_9":""
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_andromeda_top()
cr_bd_andromeda_top ""
set_property REGISTERED_WITH_MANAGER "1" [get_files andromeda_top.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files andromeda_top.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a75tfgg484-2 -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "synth_1_synth_report_utilization_0" -objects $obj

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7a75tfgg484-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a75tfgg484-2 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_init_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_opt_report_drc_0" -objects $obj

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_power_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_io_0" -objects $obj

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_utilization_0" -objects $obj

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_control_sets_0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_1" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_post_place_power_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_phys_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_drc_0" -objects $obj

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_methodology_0" -objects $obj

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_power_0" -objects $obj

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_route_status_0" -objects $obj

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_clock_utilization_0" -objects $obj

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_bus_skew_0" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_bus_skew_0" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7a75tfgg484-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
set obj [get_dashboards default_dashboard]

# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
# Set current dashboard to 'default_dashboard' 
current_dashboard default_dashboard 
